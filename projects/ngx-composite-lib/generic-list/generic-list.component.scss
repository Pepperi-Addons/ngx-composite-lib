
@use '@pepperi-addons/ngx-lib/src/core/style/abstracts/variables' as ngx-variables;
@use '@pepperi-addons/ngx-lib/src/core/style/abstracts/mixins' as ngx-mixins;

:host {
    height: inherit;
    display: block;
}

.main-area-container {
    display: grid;
    height: inherit;
}

.list-container {
    height: 100%;
}

.list-empty-state {
    padding-top: ngx-variables.$spacing-lg;
    height: calc(100% - #{ngx-variables.$spacing-lg});
    background: rgb(247, 247, 247);
    border-radius: ngx-variables.$border-radius-md;    
    position: relative;
    overflow: hidden;
    @include ngx-mixins.align-center;
    flex-direction: column;    

    .leaf-skiny {
        z-index: ngx-variables.$z-index-lowest;
        height: 52rem;
        position: absolute;
        left: -10rem;
        top: -2rem;
        pointer-events: none;
        transform: scale(1.4);
    }

    .leaf-round {
        z-index: ngx-variables.$z-index-lowest;  
        height: 45rem;
        position: absolute;
        right: -13rem;
        top: -7rem;
        pointer-events: none;
        transform: rotate(45deg) scale(1);
    }

    .list-empty-title {
        @include ngx-mixins.font-title(ngx-variables.$fs-2xl, ngx-variables.$lh-2xl);
        z-index: ngx-variables.$z-index-low;    
        padding-inline: ngx-variables.$spacing-lg;         
    }

    .list-empty-descr {
        @include ngx-mixins.font-body(ngx-variables.$fs-md, ngx-variables.$lh-md);
        z-index: ngx-variables.$z-index-low;
        padding-inline: ngx-variables.$spacing-lg; 
    }

     /* > Large */
     @media (min-width: (ngx-variables.$screen-max-size-md + 1)) {
      
     }

     /* > Medium */
     @media (max-width: ngx-variables.$screen-max-size-md) {
         .leaf-skiny {
            top: -5rem;
            left: -11rem;
            transform: scale(1.1);
         }
         .leaf-round {
             right: -12rem;
             top: -7rem;
             transform: rotate(45deg) scale(.9);
         }
         
    }
    
    /* > Small */
     @media (max-width: ngx-variables.$screen-max-size-sm) {
        .leaf-round {
            display: none;
        }
        .list-empty-title, .list-empty-descr {
            padding-inline: ngx-variables.$spacing-md; 
         }
    }
}

.inline-container {
    height: inherit;
    display: grid;    
    grid-template-rows: auto 1fr;
    
    &:not(.with-smart-filters) {
        .header-area {
            grid-row: 1 / 2
        }
        .list-container {
            grid-row: 2 / 3
        }
    }

    &.with-smart-filters {
        grid-template-columns: auto 1fr;
        
        .header-area {
            grid-column: 2 / 3;
            grid-row: 1 / 2
        }
        .smart-filter-area {
            grid-column: 1 / 2;
            grid-row: 1 / 3
        }
        .list-container {
            grid-column: 2 / 3;
            grid-row: 2 / 3
        }
    }

    &.add-padding {
        padding-inline: ngx-variables.$content-padding;
    }    

    .list-description {
        font-size: ngx-variables.$fs-xs;
        max-width: 640px;
        padding: ngx-variables.$spacing-sm 0;
    }

    .bread-crumbs {
        padding: ngx-variables.$spacing-md 0 ngx-variables.$spacing-sm 0;
     }
}
.none-inline {
    .list-description {
        font-size: ngx-variables.$fs-sm;
        max-width: 720px;
        padding: ngx-variables.$spacing-sm ngx-variables.$spacing-xs;
    }

    .bread-crumbs {
        padding: ngx-variables.$spacing-md ngx-variables.$spacing-xs ngx-variables.$spacing-sm ngx-variables.$spacing-xs;
     }
}

.noDataFoundMsg{
    margin: 1rem 0;
    height: calc(100% - 2rem);
    width: 100%;
    background: hsla(0, 0%, 10%, 0.12);
    display: flex;
    justify-content: center;
    align-items: center;
}

