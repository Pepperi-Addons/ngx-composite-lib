{
    "pipes": [],
    "interfaces": [
        {
            "name": "IPepGenericListActions",
            "id": "interface-IPepGenericListActions-6d8d932ec7b8828e9ac2cb4b81eaaf2c1b687d67a3e232e6e6bda8ea977edcdb1627f8614c0935217b03de4cbcdbb7aff8d893f5bbdb573f687221d50e625482",
            "file": "projects/ngx-composite-lib/generic-list/generic-list.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { GridDataView } from '@pepperi-addons/papi-sdk/dist/entities/data-view';\r\nimport { PepListPagerType } from '@pepperi-addons/ngx-lib/list';\r\n\r\nexport interface IPepGenericListDataSource {\r\n    getList(params: { \r\n        searchString: string, \r\n        fromIndex: number, \r\n        toIndex: number \r\n    }): Promise<any[]>;    \r\n    dataView: GridDataView;\r\n    totalCount: number;\r\n}\r\n\r\nexport interface IPepGenericListActions {\r\n    get(data: any): Promise<{\r\n        title: string;\r\n        handler: (obj: any) => Promise<void>;\r\n    }[]>;\r\n}\r\n\r\nexport interface IPepGenericListPager {\r\n    type: PepListPagerType;\r\n    size: number;\r\n    index: number;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 167,
            "methods": [
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<literal type[]>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "IPepGenericListDataSource",
            "id": "interface-IPepGenericListDataSource-6d8d932ec7b8828e9ac2cb4b81eaaf2c1b687d67a3e232e6e6bda8ea977edcdb1627f8614c0935217b03de4cbcdbb7aff8d893f5bbdb573f687221d50e625482",
            "file": "projects/ngx-composite-lib/generic-list/generic-list.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { GridDataView } from '@pepperi-addons/papi-sdk/dist/entities/data-view';\r\nimport { PepListPagerType } from '@pepperi-addons/ngx-lib/list';\r\n\r\nexport interface IPepGenericListDataSource {\r\n    getList(params: { \r\n        searchString: string, \r\n        fromIndex: number, \r\n        toIndex: number \r\n    }): Promise<any[]>;    \r\n    dataView: GridDataView;\r\n    totalCount: number;\r\n}\r\n\r\nexport interface IPepGenericListActions {\r\n    get(data: any): Promise<{\r\n        title: string;\r\n        handler: (obj: any) => Promise<void>;\r\n    }[]>;\r\n}\r\n\r\nexport interface IPepGenericListPager {\r\n    type: PepListPagerType;\r\n    size: number;\r\n    index: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "dataView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridDataView",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "totalCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [
                {
                    "name": "getList",
                    "args": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any[]>",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "IPepGenericListPager",
            "id": "interface-IPepGenericListPager-6d8d932ec7b8828e9ac2cb4b81eaaf2c1b687d67a3e232e6e6bda8ea977edcdb1627f8614c0935217b03de4cbcdbb7aff8d893f5bbdb573f687221d50e625482",
            "file": "projects/ngx-composite-lib/generic-list/generic-list.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { GridDataView } from '@pepperi-addons/papi-sdk/dist/entities/data-view';\r\nimport { PepListPagerType } from '@pepperi-addons/ngx-lib/list';\r\n\r\nexport interface IPepGenericListDataSource {\r\n    getList(params: { \r\n        searchString: string, \r\n        fromIndex: number, \r\n        toIndex: number \r\n    }): Promise<any[]>;    \r\n    dataView: GridDataView;\r\n    totalCount: number;\r\n}\r\n\r\nexport interface IPepGenericListActions {\r\n    get(data: any): Promise<{\r\n        title: string;\r\n        handler: (obj: any) => Promise<void>;\r\n    }[]>;\r\n}\r\n\r\nexport interface IPepGenericListPager {\r\n    type: PepListPagerType;\r\n    size: number;\r\n    index: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PepListPagerType",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-dcc5c3137cd472dd0002d85b562efd23162e3eff53ca4438a6251e6c46e3b8299076255380d1d42f386510cb6f2cbaab49fa5b5f253be459cdc3869428c5c400",
            "file": "stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "PepCompositeLibUtilitiesService",
            "id": "injectable-PepCompositeLibUtilitiesService-d394ea8f6abb5accfecb818463afdff7981a63774224cd2d7b41deffda659490b6b2044b1c1d43cc9c03631d1ac56688aacda5523fee59c3fa7d051e95ee3811",
            "file": "projects/ngx-composite-lib/src/core/common/services/utilities.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n/*\r\n    This service is for utillity usege.\r\n*/\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PepCompositeLibUtilitiesService {\r\n    constructor(\r\n        // private sessionService: PepSessionService,\r\n        // private httpService: PepHttpService,\r\n        // private loaderService: PepLoaderService\r\n    ) {\r\n        //\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "IFile",
            "id": "class-IFile-c939fd68d7d96a4ce6908c8c315c9166dc00819caf2ac239ac0a197c8caad2f26986431c69b1569efb4724be458fb949319dd0a42f36fe6c2386c5a1ef566c3c",
            "file": "projects/ngx-composite-lib/file-status-panel/file-status-panel.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export type fileStatus = 'uploading' | 'downloading' | 'done' | 'failed' | 'hidden';\r\n\r\nexport class IFile {\r\n    key = 0;\r\n    name = '';\r\n    status: fileStatus = 'uploading';\r\n}",
            "properties": [
                {
                    "name": "key",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "status",
                    "defaultValue": "'uploading'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "fileStatus",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PepColorSettings",
            "id": "class-PepColorSettings-4ceb059cf3c036648d9f4f5f50b0d618c09b8525a6423240e5bbbc0bf9e1c4a0508ff398c31e1a14d1944269dd5ae90dd20098b8cdbca37a8cc54df1849d5d07",
            "file": "projects/ngx-composite-lib/color-settings/color-settings.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class PepColorSettings {\r\n    use = false;\r\n    value = 'hsl(0, 0%, 57%)';\r\n    opacity = 50;\r\n    // useGradientOverlay?: boolean = true;\r\n}",
            "properties": [
                {
                    "name": "opacity",
                    "defaultValue": "50",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "use",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "defaultValue": "'hsl(0, 0%, 57%)'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PepShadowSettings",
            "id": "class-PepShadowSettings-efaedb36570c7d79e71a1e4a1be34f73b1df7746d1bb071f53d8406e8dda6be1b9e5d26e5997c8f6e595a2b2fe4a4d49b72b0970aa05308a9ebf3a7531299f06",
            "file": "projects/ngx-composite-lib/shadow-settings/shadow-settings.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { PepSizeType } from \"@pepperi-addons/ngx-lib\";\r\n\r\nexport type PepShadowIntensityType = 'soft' | 'regular' | 'hard';\r\n\r\nexport class PepShadowSettings {\r\n    use = false;\r\n    size: PepSizeType = 'md';\r\n    intensity: PepShadowIntensityType = 'regular';\r\n}",
            "properties": [
                {
                    "name": "intensity",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PepShadowIntensityType",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PepSizeType",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "use",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-a811ce876689c66b3b10f16d72488b30bbecf6eef8aa186272d48210edf94f68195256dce4d32425d194c7a6e66a86a75ac6d4b3880fcfe378ca1c480d754de0",
            "file": "projects/ngx-composite-lib-tester/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss",
                "./app.component.theme.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addPadding",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "customizationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PepCustomizationService",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "footerHeight",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "layoutService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PepLayoutService",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loaderService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PepLoaderService",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showHeader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "showLoader",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "showSidebar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "getTopBarStyle",
                    "args": [],
                    "optional": false,
                    "returnType": "PepStyleType",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateHome",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {\r\n    PepCustomizationService,\r\n    PepLoaderService,\r\n    PepLayoutService,\r\n    PepStyleType,\r\n} from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss', './app.component.theme.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n    footerHeight = 0;\r\n    showLoader = false;\r\n    showHeader = true;\r\n    showSidebar = false;\r\n    addPadding = true;\r\n\r\n    constructor(\r\n        public customizationService: PepCustomizationService,\r\n        public loaderService: PepLoaderService,\r\n        public layoutService: PepLayoutService,\r\n    ) {\r\n        // this.loaderService.show();\r\n        this.loaderService.onChanged$.subscribe((show) => {\r\n            this.showLoader = show;\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.customizationService.setThemeVariables();\r\n        this.customizationService.hideSettings();\r\n\r\n        this.customizationService.footerHeight.subscribe((footerHeight) => {\r\n            this.footerHeight = footerHeight;\r\n        });\r\n    }\r\n\r\n    getTopBarStyle() {\r\n        return document.documentElement.style.getPropertyValue(\r\n            PepCustomizationService.STYLE_TOP_HEADER_KEY\r\n        ) as PepStyleType;\r\n    }\r\n\r\n    navigateHome() {\r\n        alert('Home');\r\n    }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '~@pepperi-addons/ngx-lib/src/core/style/abstracts/mixins';\r\n@import '~@pepperi-addons/ngx-lib/src/core/style/abstracts/variables';\r\n@import 'ngx-composite-lib/src/core/style/abstracts/variables';\r\n\r\n#header {\r\n    height: $header-height;\r\n\r\n    .navbar {\r\n        // border: none !important;\r\n        border-radius: 0;\r\n        // @include box-sizing(border-box);\r\n        box-sizing: border-box;\r\n        height: inherit;\r\n        width: 100%;\r\n        padding: $spacing-lg $double-content-padding;\r\n        margin: 0;\r\n        max-width: $max-scr-width;\r\n\r\n        @media (max-width: $screen-max-size-xs) {\r\n            padding-left: $content-padding;\r\n            padding-right: $content-padding;\r\n        }\r\n\r\n        .navbar-default {\r\n            background-color: transparent;\r\n            border-bottom-color: transparent;\r\n        }\r\n    }\r\n}\r\n\r\n#mainCont {\r\n    flex-grow: 1;\r\n    min-height: 100%;\r\n}\r\n\r\n#loadingSpinnerModal {\r\n    z-index: $z-index-high + 101;\r\n    height: 1rem;\r\n    width: 100%;\r\n    background-color: transparent;\r\n    opacity: 1;\r\n    position: absolute;\r\n    top: $header-height !important;\r\n    overflow: hidden;\r\n}\r\n\r\n#loadingSpinner {\r\n    z-index: $z-index-high;\r\n    width: 100%;\r\n    margin-top: 5px;\r\n\r\n    div {\r\n        width: 7px;\r\n        height: 7px;\r\n        position: absolute;\r\n        left: -20px;\r\n        border-radius: 50%;\r\n        animation: move 4s infinite cubic-bezier(0.2, 0.64, 0.81, 0.23);\r\n    }\r\n\r\n    div:nth-child(2) {\r\n        animation-delay: 150ms;\r\n    }\r\n\r\n    div:nth-child(3) {\r\n        animation-delay: 300ms;\r\n    }\r\n\r\n    div:nth-child(4) {\r\n        animation-delay: 450ms;\r\n    }\r\n\r\n    div:nth-child(5) {\r\n        animation-delay: 600ms;\r\n    }\r\n}\r\n\r\n@keyframes move {\r\n    0% {\r\n        left: 0%;\r\n    }\r\n    50% {\r\n        left: 100%;\r\n    }\r\n    75% {\r\n        left: 100%;\r\n    }\r\n    100% {\r\n        left: 100%;\r\n    }\r\n}\r\n\r\n[dir='rtl'] {\r\n    #loadingSpinner {\r\n        div {\r\n            animation: moveOpp 4s infinite cubic-bezier(0.2, 0.64, 0.81, 0.23);\r\n        }\r\n\r\n        div:nth-child(2) {\r\n            animation-delay: 150ms;\r\n        }\r\n        div:nth-child(3) {\r\n            animation-delay: 300ms;\r\n        }\r\n        div:nth-child(4) {\r\n            animation-delay: 450ms;\r\n        }\r\n        div:nth-child(5) {\r\n            animation-delay: 600ms;\r\n        }\r\n    }\r\n\r\n    @keyframes moveOpp {\r\n        0% {\r\n            left: 100%;\r\n        }\r\n        50% {\r\n            left: -2%;\r\n        }\r\n        75% {\r\n            left: -2%;\r\n        }\r\n        100% {\r\n            left: -2%;\r\n        }\r\n    }\r\n}\r\n\r\n.pep-layout {\r\n    display: grid;\r\n    grid-template-rows: $header-height 1fr;\r\n    grid-template-areas: \"header\"\r\n                         \"main\";\r\n    height: 100vh;\r\n    width: 100%;\r\n    padding: 0;\r\n    overflow: hidden;\r\n\r\n    .pep-header-layout {\r\n        grid-area: header;\r\n        z-index: $z-index-high + 1;\r\n    }\r\n\r\n    .pep-main-layout {\r\n        $main-layout-height: calc(100vh - #{$header-height});\r\n        height: 100%; \r\n        grid-area: main;\r\n        display: flex;\r\n        overflow: hidden;\r\n        \r\n        &.add-padding {\r\n            padding-inline: $content-padding;\r\n\r\n            @media (max-width: $screen-max-size-xs) {\r\n                padding-inline: 0;\r\n            }\r\n        }\r\n\r\n        .pep-side-layout {\r\n            grid-area: side;\r\n            width: auto;\r\n        }\r\n\r\n        .pep-center-layout {\r\n            grid-area: center;\r\n            height: 100%;\r\n            width: 100%;\r\n            overflow: auto;\r\n\r\n            ::ng-deep > * {\r\n                height: inherit;\r\n            }\r\n        }\r\n    }\r\n    \r\n    // .pep-footer-layout {\r\n    //     grid-area: footer;\r\n    //     display: block;\r\n    // }\r\n}",
                    "styleUrl": "./app.component.scss"
                },
                {
                    "data": "@use '~@pepperi-addons/ngx-lib/src/core/style/abstracts/mixins';\r\n@use '~@pepperi-addons/ngx-lib/src/core/style/abstracts/functions';\r\n\r\n#header {\r\n    background-color: functions.get-pep-color(color-system-primary-invert, color-base);\r\n\r\n    .navbar {\r\n        box-shadow: functions.get-pep-shadow(shadow-sm, regular);\r\n        \r\n        &.weak {\r\n            @include mixins.state-weak-default(color-top-header);\r\n        }\r\n        \r\n        &.regular {\r\n            @include mixins.state-regular-default(true, color-top-header);\r\n        }\r\n        \r\n        &.strong {\r\n            @include mixins.state-strong-default(color-top-header);\r\n        }\r\n        \r\n        border-right: none !important;\r\n        border-left: none !important;\r\n    }\r\n}",
                    "styleUrl": "./app.component.theme.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "customizationService",
                        "type": "PepCustomizationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loaderService",
                        "type": "PepLoaderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "layoutService",
                        "type": "PepLayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "customizationService",
                        "type": "PepCustomizationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loaderService",
                        "type": "PepLoaderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "layoutService",
                        "type": "PepLayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"loadingSpinnerModal\" *ngIf=\"showHeader\" [hidden]=\"!showLoader\" pepRtlClass >\r\n    <div id=\"loadingSpinner\">\r\n        <div class=\"pep-loading-spinner\" *ngFor=\"let number of [0, 1, 2, 3, 4]\" [ngStyle]=\"{ 'background-color': customizationService?.getLoadingSpinnerColor() }\"></div>\r\n    </div>\r\n</div>\r\n<div class=\"pep-layout\" dir=\"{{ layoutService.isRtl() ? 'rtl' : 'ltr' }}\">\r\n    <header class=\"pep-header-layout\">\r\n        <div id=\"header\" pepRtlClass>\r\n            <nav class=\"navbar {{ getTopBarStyle() }} navbar-light bg-faded menuCont\"\r\n                [ngStyle]=\"{'background-color': customizationService.getBrandingMainColor() }\">\r\n                <div class=\"pep-spacing-element-negative\">\r\n                    <pep-button sizeType=\"sm\" styleType=\"weak\" classNames=\"keep-background-on-focus\"\r\n                        class=\"pep-spacing-element pull-left flip\" iconName=\"system_home\"  (click)=\"navigateHome()\">\r\n                    </pep-button>\r\n                </div>\r\n                <div class=\"pep-spacing-element-negative\">\r\n                    <pep-button [value]=\"'ExampleComponentsTitle' | translate\" sizeType=\"sm\" styleType=\"weak\" class=\"pep-spacing-element pull-right flip\" classNames=\"keep-background-on-focus\"\r\n                        [routerLink]=\"['components-example']\">\r\n                    </pep-button>\r\n                    <pep-button [value]=\"'GenericListExampleComponentTitle' | translate\" sizeType=\"sm\" styleType=\"weak\" class=\"pep-spacing-element pull-right flip\" classNames=\"keep-background-on-focus\"\r\n                        [routerLink]=\"['generic-list-example']\">\r\n                    </pep-button>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    </header>\r\n    <main class=\"pep-main-layout\" [ngClass]=\"{ 'add-padding': addPadding }\">\r\n        <aside *ngIf=\"showSidebar\" class=\"pep-side-layout\">\r\n        </aside>\r\n        <div class=\"pep-center-layout\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </main>\r\n</div>\r\n<pep-size-detector></pep-size-detector>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-8ceaf520f96e5437b08eeda244d84efb29effe62ddca4fc38eaa229085c2a1126c5715e61445bae741505aca1e4d377b350cb05fadd1dc45d9b2bbf7527029f1",
            "file": "stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 747,
                            "end": 761,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 748,
                                "end": 756,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ColorSettingsComponent",
            "id": "component-ColorSettingsComponent-a0c9b589730508206e87bdadbb54ac9f4aad48bac364b622db0857823422fa21af0113b1222df7c2424d3b8b65c89ee7ffd37462ddab80ac63dc3ebc82efc627",
            "file": "projects/ngx-composite-lib/color-settings/color-settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pep-color-settings",
            "styleUrls": [
                "./color-settings.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./color-settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "colorChange",
                    "defaultValue": "new EventEmitter<PepColorSettings>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter<PepColorSettings>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_color",
                    "defaultValue": "new PepColorSettings()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PepColorSettings",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getRGBAcolor",
                    "args": [
                        {
                            "name": "colorObj",
                            "type": "PepColorSettings",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "opac",
                            "type": "number | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "colorObj",
                            "type": "PepColorSettings",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "opac",
                            "type": "number | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSliderBackground",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onColorChanged",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSliderValueChanged",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onUseChanged",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "raiseColorChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { PepColorService } from '@pepperi-addons/ngx-lib';\r\nimport { PepColorSettings } from './color-settings.model';\r\n\r\n@Component({\r\n    selector: 'pep-color-settings',\r\n    templateUrl: './color-settings.component.html',\r\n    styleUrls: ['./color-settings.component.scss']\r\n})\r\nexport class ColorSettingsComponent implements OnInit {\r\n\r\n    @Input() title = '';\r\n\r\n    private _color: PepColorSettings = new PepColorSettings();\r\n    @Input()\r\n    set color(value: PepColorSettings) {\r\n        if (!value) {\r\n            this._color = new PepColorSettings();\r\n        } else {\r\n            this._color = value;\r\n        }\r\n    }\r\n    get color(): PepColorSettings {\r\n        return this._color;\r\n    }\r\n\r\n    @Output()\r\n    colorChange: EventEmitter<PepColorSettings> = new EventEmitter<PepColorSettings>();\r\n    \r\n    constructor(private pepColorService: PepColorService) { }\r\n\r\n    ngOnInit() {\r\n        //\r\n    }\r\n\r\n    private getRGBAcolor(colorObj: PepColorSettings, opac: number | null = null) {\r\n        let rgba = 'rgba(255,255,255,0)';\r\n\r\n        if (colorObj) {\r\n            const color = colorObj.value;\r\n            let opacity = opac != null ? opac : colorObj.opacity;\r\n\r\n            opacity = opacity > 0 ? opacity / 100 : 0;\r\n\r\n            const hsl = this.pepColorService.hslString2hsl(color);\r\n            const rgb = this.pepColorService.hsl2rgb(hsl);\r\n            rgba = 'rgba(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ',' + opacity + ')';\r\n        }\r\n\r\n        return rgba;\r\n    }\r\n\r\n    private raiseColorChange() {\r\n        this.colorChange.emit(this.color);\r\n    }\r\n\r\n    getSliderBackground() {\r\n        const alignTo = 'right';\r\n    \r\n        const colorObj = new PepColorSettings();\r\n    \r\n        colorObj.value = this.color.value;\r\n        colorObj.opacity = 100;\r\n    \r\n        const gradStr = this.getRGBAcolor(colorObj, 0) + ' , ' + this.getRGBAcolor(colorObj);\r\n    \r\n        return 'linear-gradient(to ' + alignTo + ', ' + gradStr + ')';\r\n    }\r\n\r\n    onUseChanged(value: boolean) {\r\n        this.color.use = value;\r\n        this.raiseColorChange();\r\n    }\r\n\r\n    onColorChanged(value: string) {\r\n        this.color.value = value;\r\n        this.raiseColorChange();\r\n    }\r\n\r\n    onSliderValueChanged(value: number) {\r\n        this.color.opacity = value;\r\n        this.raiseColorChange();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    width: 100%;\r\n    // max-width: 200px;\r\n}",
                    "styleUrl": "./color-settings.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pepColorService",
                        "type": "PepColorService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "pepColorService",
                        "type": "PepColorService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "color": {
                    "name": "color",
                    "setSignature": {
                        "name": "color",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "PepColorSettings",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "PepColorSettings",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "color",
                        "type": "",
                        "returnType": "PepColorSettings",
                        "line": 23
                    }
                }
            },
            "templateData": "<pep-checkbox class=\"checkbox-as-title\" [label]=\"title\" [renderTitle]=\"false\" [value]=\"color.use\" (valueChange)=\"onUseChanged($event)\"></pep-checkbox>\r\n<pep-color [value]=\"color.value\" [label]=\"title + ' ' + ('COLOR_SETTINGS.COLOR' | translate)\" [disabled]=\"!color.use\" (valueChange)=\"onColorChanged($event)\">\r\n</pep-color>\r\n<pep-slider [label]=\"title + ' ' + ('COLOR_SETTINGS.OPACITY' | translate)\" [hint]=\"color.opacity.toString() || ''\" [minValue]=\"0\" [maxValue]=\"100\" [disabled]=\"!color.use\" [value]=\"color.opacity\" \r\n    [background]=\"getSliderBackground()\" (inputChange)=\"onSliderValueChanged($event)\">\r\n</pep-slider>\r\n"
        },
        {
            "name": "ComponentsExampleComponent",
            "id": "component-ComponentsExampleComponent-01ca172031525aa25c3ffd8a0565bdb1911f1b40b3632be8c2f155d703ff7d91d3b017a9c4be7552015334d6e9666654ee5a4224c48385b109c22f40a8f6b3c1",
            "file": "projects/ngx-composite-lib-tester/src/app/components-example/components-example.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-components-example",
            "styleUrls": [
                "./components-example.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./components-example.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "files",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<IFile>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { IFile } from '@pepperi-addons/ngx-composite-lib/file-status-panel';\r\n\r\n@Component({\r\n    selector: 'app-components-example',\r\n    templateUrl: './components-example.component.html',\r\n    styleUrls: ['./components-example.component.scss']\r\n})\r\nexport class ComponentsExampleComponent implements OnInit {\r\n\r\n    public files: Array<IFile> = [];\r\n\r\n    constructor() { \r\n        //\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        \r\n        this.addFiles();\r\n\r\n        \r\n    }\r\n\r\n    addFiles(){\r\n        \r\n        const self = this;\r\n        const file: IFile = new IFile();\r\n        file.name = 'Test';\r\n        file.status = 'downloading';\r\n\r\n        window.setInterval(function () { \r\n\r\n            self.files.push(file);\r\n\r\n            if(self.files.length === 4){\r\n                self.files[2].status = 'done';\r\n                self.files[0].status = 'failed';\r\n            }\r\n            else if(self.files.length === 6){\r\n                self.files = [];\r\n            }\r\n          }, 2000);\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".components-container {\r\n    display: flex;\r\n    flex-flow: column;\r\n    padding: 1rem;\r\n    width: 300px;\r\n    gap: 1rem;\r\n}",
                    "styleUrl": "./components-example.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"components-container\">\r\n    \r\n    <pep-color-settings title=\"Color\"></pep-color-settings>\r\n    <pep-shadow-settings ></pep-shadow-settings>\r\n    <!-- <pep-button value=\"click here\"></pep-button> -->\r\n    <pep-group-buttons-settings [groupType]=\"'vertical-align'\" [title]=\"'Group buttons'\" [subHeader]=\"'Eisenberg'\"></pep-group-buttons-settings>\r\n    <pep-file-status-panel [title]=\"'File download'\" [filesList]=\"files\"></pep-file-status-panel>\r\n</div>"
        },
        {
            "name": "DraggableItemComponent",
            "id": "component-DraggableItemComponent-07642acdcac08c39629f5f0c1db16799aa91d2824ddc7e649e0e434a4b31b3d69f4977b2376bfdf447d14f54f556112aeae8b2eef9ff79e4950843d4035fb082",
            "file": "projects/ngx-composite-lib/draggable-item/draggable-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pep-draggable-item",
            "styleUrls": [
                "./draggable-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./draggable-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_cursor",
                    "defaultValue": "'move'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'style.cursor'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "style.cursor",
                    "defaultValue": "'move'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostBinding, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'pep-draggable-item',\r\n    templateUrl: './draggable-item.component.html',\r\n    styleUrls: ['./draggable-item.component.scss']\r\n})\r\nexport class DraggableItemComponent implements OnInit {\r\n\r\n    @HostBinding('style.cursor') _cursor = 'move';\r\n\r\n    @Input() title = '';\r\n    \r\n    @Input() disabled = false;\r\n\r\n    // private _isDraggable = false;\r\n    // @Input()\r\n    // set isDraggable(value: boolean) {\r\n    //     this._isDraggable = value;\r\n\r\n    //     this._cursor = value ? 'move' : 'inherit'\r\n    // }\r\n    // get isDraggable(): boolean {\r\n    //     return this._isDraggable;\r\n    // }\r\n\r\n    constructor() { \r\n        //\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        //\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@pepperi-addons/ngx-lib/src/core/style/abstracts/variables' as ngx-variables;\r\n@use '~@pepperi-addons/ngx-lib/src/core/style/abstracts/functions' as ngx-functions;\r\n@use '~@pepperi-addons/ngx-lib/src/core/style/abstracts/mixins' as ngx-mixins;\r\n\r\n@use '../src/core/style/abstracts/variables';\r\n\r\n:host {\r\n    display: block;\r\n    cursor: grab; \r\n}\r\n\r\n.draggable-item-container {\r\n    // opacity: 0.75;\r\n    height: variables.$draggable-item-height;\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    align-items: center;\r\n    border-radius: ngx-variables.$border-radius-md;\r\n    padding-inline: ngx-variables.$spacing-sm;\r\n    \r\n    @include ngx-mixins.state-regular-default(true);\r\n\r\n    .title-container {\r\n        overflow-x: hidden;\r\n        margin-inline: ngx-variables.$spacing-sm;\r\n\r\n        .title {\r\n            display: block;\r\n        }\r\n    }\r\n\r\n    .actions {\r\n        display: inline-flex;\r\n        gap: ngx-variables.$spacing-xs;\r\n    }\r\n}",
                    "styleUrl": "./draggable-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"draggable-item-container\" [ngClass]=\"{ 'disabled': disabled }\">\r\n    <div class=\"\">\r\n        <pep-button classNames=\"lock-events\" sizeType=\"xs\" iconName=\"system_move\"></pep-button>\r\n    </div>\r\n    <div *ngIf=\"title !== ''\" class=\"title-container\">\r\n        <span class=\"body-sm bold ellipsis title\" title=\"{{title}}\">{{title}}</span>\r\n    </div>\r\n    <div class=\"actions\">\r\n        <ng-content select=\"[pep-actions]\"></ng-content>\r\n    </div>\r\n</div>"
        },
        {
            "name": "FileStatusPanelComponent",
            "id": "component-FileStatusPanelComponent-553be285686538c54db25a8dabc47ec970d38375a97415a41e79dfea416ee9d848c5f8bb8bb387dbc6ea8ec9ad36bf5c6abde726d06d83457b2adfa3dba2407b",
            "file": "projects/ngx-composite-lib/file-status-panel/file-status-panel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pep-file-status-panel",
            "styleUrls": [
                "./file-status-panel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./file-status-panel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "filesList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "Array<IFile>",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "translate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TranslateService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Injectable, Input, Output, EventEmitter, Optional, Inject } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IFile } from './file-status-panel.model';\r\n\r\n@Component({\r\n    selector: 'pep-file-status-panel',\r\n    templateUrl: './file-status-panel.component.html',\r\n    styleUrls: ['./file-status-panel.component.scss']\r\n})\r\n\r\nexport class FileStatusPanelComponent implements OnInit {\r\n    \r\n    @Input() title = '';\r\n    @Input() filesList: Array<IFile> = [];\r\n    \r\n    constructor( public translate: TranslateService) {\r\n       //\r\n    }\r\n\r\n    ngOnInit() {\r\n        //\r\n    }\r\n\r\n    closeClick(event: any): void {\r\n        //\r\n    }\r\n\r\n\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "#uploadPanelCont{\r\n    position: absolute;\r\n    bottom: 10px;\r\n    right: 2.5rem;\r\n    width: 22rem;\r\n    padding: 1rem;\r\n    min-height: 7rem;\r\n    background: rgb(255, 255, 255);\r\n    border: 1px solid rgb(89, 89, 89);\r\n    box-shadow: 0px 0px 16px 0px rgba(0, 0, 0, 0.24);\r\n    border-radius: .25rem;\r\n    z-index: 9999;\r\n\r\n.panel-header{\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    height: 2.5rem;\r\n\r\n        ::ng-deep{\r\n            .roundCorners{\r\n                border-radius: 1.5rem;\r\n            }\r\n        }\r\n    }\r\n}\r\n.panel-content{\r\n\r\n    max-height: 50vh;\r\n    overflow: auto;\r\n\r\n    ul{\r\n      list-style-type: none;\r\n      padding: 0;  \r\n\r\n      li{\r\n          height: 1.25rem;\r\n          margin-top: .5rem;\r\n          display: flex;\r\n          flex-direction: row;\r\n        \r\n          .done{\r\n              color: Green !important;\r\n          }\r\n          \r\n        ::ng-deep{\r\n            .xxs-btn{\r\n                min-width: 1rem !important;\r\n                height: 1.3rem;\r\n                pep-icon{\r\n                    \r\n                    width: .75rem !important;\r\n                }\r\n            } \r\n        }\r\n      }\r\n      \r\n    }\r\n}\r\n\r\n",
                    "styleUrl": "./file-status-panel.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"filesList.length\" id=\"uploadPanelCont\">\r\n    <div class=\"panel-header pep-border-bottom\">\r\n        <label class=\"body-md ellipsis\">{{title}}</label>\r\n        <pep-button\r\n            styleType=\"weak\"\r\n            styleStateType=\"system\"\r\n            sizeType=\"xs\"\r\n            classNames=\"roundCorners\"\r\n            [disabled]=\"false\"\r\n            iconName=\"system_close\"\r\n            iconPosition=\"end\"\r\n            [visible]=\"true\"\r\n            (buttonClick)=\"closeClick($event)\">\r\n        </pep-button>\r\n    </div>\r\n    <div class=\"panel-content\">\r\n        <ul>\r\n            <ng-container *ngFor=\"let file of filesList\">\r\n            <li *ngIf=\"file?.status !== 'hidden'\">\r\n               \r\n                <span class=\"color-dimmed body-sm ellipsis\">{{file.name}}</span>\r\n                <pep-button\r\n                    styleType=\"weak-invert\"\r\n                    styleStateType=\"system\"\r\n                    classNames=\"xxs-btn\"\r\n                    [disabled]=\"false\"\r\n                    iconName=\"arrow_right_alt\">\r\n                </pep-button>\r\n                <span class=\"body-sm\">{{file.status}}</span>\r\n            \r\n            </li>\r\n        </ng-container>\r\n        </ul>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "GenericListComponent",
            "id": "component-GenericListComponent-b152c24a619931f02966761ce23cba1599bb18d7f62cd8d4a48800b29c4f8654b9a47cf6fd50dab7aacdae57115acbc88f8eba5b13bd8e958b85da9eccf892bc",
            "file": "projects/ngx-composite-lib/generic-list/generic-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pep-generic-list",
            "styleUrls": [
                "./generic-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./generic-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "defaultValue": "{\r\n        get: async (data: any) => {\r\n            return []\r\n        }\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "IPepGenericListActions",
                    "decorators": []
                },
                {
                    "name": "addPadding",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "allowMultipleSelection",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "allowSelection",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "breadCrumbsItems",
                    "defaultValue": "new Array<PepBreadCrumbItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "data",
                    "defaultValue": "{\r\n        getList: async (options: any) => {\r\n            return [];\r\n        },\r\n        dataView: {\r\n            Type: 'Grid'\r\n        },\r\n        totalCount: 0\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "IPepGenericListDataSource",
                    "decorators": []
                },
                {
                    "name": "firstFieldAsLink",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 91,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "inline",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "noDataFoundMsg",
                    "defaultValue": "this.translate.instant('GENERIC_LIST.NO_DATA')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "pager",
                    "defaultValue": "{\r\n        type: 'scroll',\r\n        size: DEFAULT_PAGE_SIZE,        \r\n        index: 0\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 103,
                    "type": "IPepGenericListPager",
                    "decorators": []
                },
                {
                    "name": "showSearch",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showTopBar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "supportSorting",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "breadCrumbItemClick",
                    "defaultValue": "new EventEmitter<IPepBreadCrumbItemClickEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 116,
                    "type": "EventEmitter"
                },
                {
                    "name": "fieldClick",
                    "defaultValue": "new EventEmitter<IPepFormFieldClickEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 110,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<IPepFormFieldValueChangeEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 113,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "customList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PepListComponent | undefined",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "PepListComponent"
                        }
                    ]
                },
                {
                    "name": "hasRows",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 122
                },
                {
                    "name": "menuActions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<PepMenuItem>",
                    "optional": false,
                    "description": "",
                    "line": 121
                },
                {
                    "name": "menuHandlers",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "searchString",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 119
                }
            ],
            "methodsClass": [
                {
                    "name": "convertToPepRowData",
                    "args": [
                        {
                            "name": "object",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dataView",
                            "type": "GridDataView",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "object",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dataView",
                            "type": "GridDataView",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDataList",
                    "args": [
                        {
                            "name": "fromIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "toIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 252,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "fromIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "toIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getMenuActions",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<PepMenuItem[]>",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        131
                    ]
                },
                {
                    "name": "getMenuObjects",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getObject",
                    "args": [
                        {
                            "name": "uuid",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 196,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uuid",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadMenuItems",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 206,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBreadCrumbItemClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "IPepBreadCrumbItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 244,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IPepBreadCrumbItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onCustomizeFieldClick",
                    "args": [
                        {
                            "name": "fieldClickEvent",
                            "type": "IPepFormFieldClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 240,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fieldClickEvent",
                            "type": "IPepFormFieldClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLoadItems",
                    "args": [
                        {
                            "name": "event",
                            "type": "IPepListLoadItemsEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 265,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nloads virtual scroll items from api\n",
                    "description": "<p>loads virtual scroll items from api</p>\n",
                    "modifierKind": [
                        123,
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IPepListLoadItemsEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLoadPage",
                    "args": [
                        {
                            "name": "event",
                            "type": "IPepListLoadPageEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 275,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nloads paging bulk from api\n",
                    "description": "<p>loads paging bulk from api</p>\n",
                    "modifierKind": [
                        123,
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IPepListLoadPageEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMenuItemClicked",
                    "args": [
                        {
                            "name": "action",
                            "type": "IPepMenuItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "IPepMenuItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSearchChanged",
                    "args": [
                        {
                            "name": "event",
                            "type": "IPepSearchClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 214,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IPepSearchClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelectedRowsChanged",
                    "args": [
                        {
                            "name": "selectedRowsCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedRowsCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onValueChanged",
                    "args": [
                        {
                            "name": "event",
                            "type": "IPepFormFieldValueChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 248,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IPepFormFieldValueChangeEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reload",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 219,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n    Component,\r\n    OnInit,\r\n    AfterViewInit,\r\n    ViewChild,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n} from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {\r\n    PepDataConvertorService,\r\n    PepLayoutService,\r\n    PepRowData,\r\n    PepScreenSizeType,\r\n    PepGuid,\r\n} from '@pepperi-addons/ngx-lib';\r\nimport { IPepFormFieldClickEvent } from '@pepperi-addons/ngx-lib/form';\r\nimport {\r\n    PepListComponent,\r\n    PepSelectionData,\r\n    IPepListLoadPageEvent,    \r\n    IPepListPagerChangeEvent,\r\n    PepListPagerType,\r\n    DEFAULT_PAGE_SIZE,\r\n    IPepListLoadItemsEvent\r\n} from '@pepperi-addons/ngx-lib/list';\r\nimport {\r\n    PepMenuItem,\r\n    IPepMenuItemClickEvent,\r\n} from '@pepperi-addons/ngx-lib/menu';\r\nimport { IPepFormFieldValueChangeEvent } from '@pepperi-addons/ngx-lib/form';\r\nimport {\r\n    PepBreadCrumbItem,\r\n    IPepBreadCrumbItemClickEvent\r\n} from '@pepperi-addons/ngx-lib/bread-crumbs';\r\nimport { IPepSearchClickEvent } from '@pepperi-addons/ngx-lib/search';\r\n\r\nimport { GridDataViewField, DataViewFieldTypes, GridDataView } from '@pepperi-addons/papi-sdk/dist/entities/data-view';\r\nimport { IPepGenericListDataSource, IPepGenericListPager, IPepGenericListActions } from './generic-list.model';\r\n\r\n\r\n@Component({\r\n    selector: 'pep-generic-list',\r\n    templateUrl: './generic-list.component.html',\r\n    styleUrls: ['./generic-list.component.scss'],\r\n})\r\nexport class GenericListComponent implements OnInit, AfterViewInit {\r\n    @ViewChild(PepListComponent) customList: PepListComponent | undefined;\r\n\r\n    @Input()\r\n    data: IPepGenericListDataSource = {\r\n        getList: async (options: any) => {\r\n            return [];\r\n        },\r\n        dataView: {\r\n            Type: 'Grid'\r\n        },\r\n        totalCount: 0\r\n    };  \r\n\r\n    @Input()\r\n    actions: IPepGenericListActions = {\r\n        get: async (data: any) => {\r\n            return []\r\n        }\r\n    };\r\n\r\n    @Input()\r\n    addPadding = false;\r\n\r\n    @Input()\r\n    title = '';\r\n\r\n    @Input()\r\n    inline = false;\r\n\r\n    @Input()\r\n    showSearch = false;\r\n\r\n    @Input()\r\n    allowSelection = true;\r\n\r\n    @Input()\r\n    noDataFoundMsg: string = this.translate.instant('GENERIC_LIST.NO_DATA');\r\n\r\n    @Input()\r\n    allowMultipleSelection = false;\r\n\r\n    @Input()\r\n    firstFieldAsLink = false;\r\n\r\n    @Input()\r\n    supportSorting = false;\r\n\r\n    @Input()\r\n    showTopBar = false;\r\n    \r\n    @Input()\r\n    breadCrumbsItems = new Array<PepBreadCrumbItem>();\r\n\r\n    @Input() \r\n    pager: IPepGenericListPager = {\r\n        type: 'scroll',\r\n        size: DEFAULT_PAGE_SIZE,        \r\n        index: 0\r\n    }   \r\n\r\n    @Output()\r\n    fieldClick = new EventEmitter<IPepFormFieldClickEvent>();\r\n\r\n    @Output()\r\n    valueChange = new EventEmitter<IPepFormFieldValueChangeEvent>();\r\n\r\n    @Output()\r\n    breadCrumbItemClick = new EventEmitter<IPepBreadCrumbItemClickEvent>();\r\n\r\n    // dataObjects: any[] = [];\r\n    searchString = '';\r\n    menuHandlers: { [key: string]: (obj: any) => Promise<void> } = {};\r\n    menuActions: Array<PepMenuItem> = [];\r\n    hasRows = true;       \r\n\r\n    constructor(\r\n        private dataConvertorService: PepDataConvertorService,\r\n        private layoutService: PepLayoutService,\r\n        private translate: TranslateService\r\n    ) {\r\n        this.layoutService.onResize$.pipe().subscribe((size) => {\r\n            //            \r\n        });\r\n    }    \r\n\r\n    private loadMenuItems(): void {\r\n        if (this.allowSelection) {\r\n            this.getMenuActions().then(x => this.menuActions = x);\r\n        }\r\n    }\r\n\r\n    private convertToPepRowData(object: any, dataView: GridDataView) {\r\n        const row = new PepRowData();\r\n        row.Fields = [];\r\n\r\n        if (dataView?.Fields && dataView.Columns) {\r\n            for (let index = 0; index < dataView.Fields.length; index++) {\r\n                const field = dataView.Fields[index] as GridDataViewField\r\n                row.Fields.push({\r\n                    ApiName: field.FieldID,\r\n                    Title: this.translate.instant(field.Title),\r\n                    XAlignment: 1,\r\n                    FormattedValue: (object[field.FieldID] || '').toString(),\r\n                    Value: (object[field.FieldID] || '').toString(),\r\n                    ColumnWidth: dataView.Columns[index].Width,\r\n                    AdditionalValue: '',\r\n                    OptionalValues: [],\r\n                    FieldType: DataViewFieldTypes[field.Type],\r\n                    ReadOnly: field.ReadOnly,\r\n                    Enabled: !field.ReadOnly\r\n                })\r\n            }\r\n        }\r\n        return row;\r\n    }\r\n\r\n    private async getMenuActions(): Promise<PepMenuItem[]> {        \r\n        const actions = await this.actions.get(this.getMenuObjects());              \r\n        const res: PepMenuItem[] = [];\r\n        this.menuHandlers = {};\r\n\r\n        actions?.forEach(item => {\r\n            const uuid = PepGuid.newGuid();\r\n            this.menuHandlers[uuid] = item.handler;\r\n            res.push({\r\n                key: uuid,\r\n                text: item.title\r\n            })\r\n        })\r\n\r\n        return res;\r\n    }\r\n\r\n    private getMenuObjects() {\r\n        const selectedData = this.customList?.getSelectedItemsData() || new PepSelectionData();\r\n\r\n        // if (selectedData.rows?.length > 0 && this.customList?.getIsAllSelectedForActions()) {\r\n        //     selectedData.rows = this.dataObjects.map(obj => obj.UID).filter(x => selectedData.rows.indexOf(x) !== -1);\r\n        // }\r\n\r\n        // if (selectedData.rows?.length > 0) {\r\n        //     selectedData.rows = selectedData.rows.map(uuid => this.getObject(uuid));\r\n        // }\r\n\r\n        return selectedData;\r\n    }\r\n\r\n    getObject(uuid: string) {\r\n        return this.customList?.getItemDataByID(uuid); // this.dataObjects.find(obj => obj.UID === uuid);\r\n    }\r\n\r\n    ngOnInit() {\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.reload();\r\n    }\r\n\r\n    onMenuItemClicked(action: IPepMenuItemClickEvent): void {\r\n        this.menuHandlers[action.source.key](this.getMenuObjects());\r\n    }\r\n\r\n    onSearchChanged(event: IPepSearchClickEvent) {\r\n        this.searchString = event.value;\r\n        this.reload();\r\n    }\r\n\r\n    async reload() {        \r\n        if (this.customList && this.data.totalCount > 0) {\r\n            const fromIndex = 0;\r\n            const toIndex = Math.min(fromIndex + this.pager.size - 1, this.data.totalCount - 1);\r\n\r\n            const dataList = await this.getDataList(fromIndex, toIndex);                        \r\n            const convertedList = this.dataConvertorService.convertListData(dataList);         \r\n            const uiControl = this.dataConvertorService.getUiControl(dataList[0]);\r\n\r\n            this.customList.initListData(uiControl, this.data.totalCount, convertedList);            \r\n            this.loadMenuItems();\r\n            this.hasRows = dataList.length > 0 ? true : false;\r\n        } else {\r\n            this.hasRows = false;\r\n        }\r\n    }\r\n    \r\n    onSelectedRowsChanged(selectedRowsCount: number) {\r\n        this.loadMenuItems();\r\n    }\r\n    \r\n    onCustomizeFieldClick(fieldClickEvent: IPepFormFieldClickEvent) {\r\n        this.fieldClick.emit(fieldClickEvent);\r\n    }\r\n\r\n    onBreadCrumbItemClick(event: IPepBreadCrumbItemClickEvent) {\r\n        this.breadCrumbItemClick.emit(event);\r\n    }\r\n\r\n    onValueChanged(event: IPepFormFieldValueChangeEvent) {\r\n        this.valueChange.emit(event);\r\n    }\r\n\r\n    private async getDataList(fromIndex: number, toIndex: number) {\r\n        const dataList = await this.data.getList({\r\n            searchString: this.searchString,\r\n            fromIndex: fromIndex,\r\n            toIndex: toIndex\r\n        });  \r\n        const dataView = this.data.dataView;\r\n        return dataList.map(item => this.convertToPepRowData(item, dataView));           \r\n    }\r\n\r\n    /**\r\n     * loads virtual scroll items from api\r\n     */\r\n    public async onLoadItems(event: IPepListLoadItemsEvent) {        \r\n        const dataList = await this.getDataList(event.fromIndex, event.toIndex);        \r\n        const data = this.dataConvertorService.convertListData(dataList);\r\n        \r\n        this.customList?.updateItems(data, event);\r\n    }\r\n\r\n    /**\r\n     * loads paging bulk from api\r\n     */\r\n    public async onLoadPage(event: IPepListLoadPageEvent) {\r\n        const fromIndex = event.pageIndex * event.pageSize;\r\n        const toIndex = Math.min(fromIndex + event.pageSize - 1, this.data.totalCount - 1);\r\n\r\n        const dataList = await this.getDataList(fromIndex, toIndex);               \r\n        const data = this.dataConvertorService.convertListData(dataList);\r\n        \r\n        this.customList?.updatePage(data, event);\r\n    }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n@use '~@pepperi-addons/ngx-lib/src/core/style/abstracts/variables' as ngx-variables;\r\n\r\n:host {\r\n    height: inherit;\r\n    display: block;\r\n}\r\n\r\n.main-area-container {\r\n    display: grid;\r\n    height: inherit;\r\n}\r\n\r\n.list-container {\r\n    height: 100%;\r\n}\r\n\r\n.inline-container {\r\n    height: inherit;\r\n    display: grid;\r\n    grid-template-rows: auto 1fr;\r\n\r\n    &.add-padding {\r\n        padding-inline: ngx-variables.$content-padding;\r\n    }\r\n\r\n    ::ng-deep.pep-top-bar-container.inline {\r\n        height: auto;\r\n        overflow: hidden;\r\n    }\r\n}\r\n\r\n.noDataFoundMsg{\r\n    height: 100%;\r\n    width: 100%;\r\n    background: hsla(0, 0%, 10%, 0.12);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.bread-crumbs {\r\n    padding: 1rem 0 .5rem 0;\r\n}\r\n",
                    "styleUrl": "./generic-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataConvertorService",
                        "type": "PepDataConvertorService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "layoutService",
                        "type": "PepLayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 122,
                "jsdoctags": [
                    {
                        "name": "dataConvertorService",
                        "type": "PepDataConvertorService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "layoutService",
                        "type": "PepLayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<div *ngIf=\"inline\" class=\"inline-container\" [ngClass]=\"{ 'add-padding': addPadding }\">\r\n    <div>\r\n        <div *ngIf=\"showTopBar\" class=\"inline-top-bar-container\">\r\n            <ng-container *ngTemplateOutlet=\"topBarTemplate\"></ng-container>\r\n        </div>        \r\n        <ng-container *ngIf=\"breadCrumbsItems.length > 0\">\r\n            <!-- <ng-container *ngTemplateOutlet=\"breadCrumbsTemplate\"></ng-container> -->\r\n            <pep-bread-crumbs class=\"bread-crumbs\" [items]=\"breadCrumbsItems\" [addSpacing]=\"true\"\r\n                [displayType]=\"'items'\" (itemClick)=\"onBreadCrumbItemClick($event)\"></pep-bread-crumbs>\r\n        </ng-container>\r\n    </div>\r\n    <ng-container *ngTemplateOutlet=\"listTemplate\"></ng-container>\r\n</div>\r\n\r\n<pep-page-layout *ngIf=\"!inline\" [addPadding]=\"addPadding\">\r\n    <ng-container *ngIf=\"showTopBar\" pep-top-area>\r\n        <ng-container *ngTemplateOutlet=\"topBarTemplate\"></ng-container>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"breadCrumbsItems.length > 0\" pep-top-area>        \r\n        <!-- <ng-container *ngTemplateOutlet=\"breadCrumbsTemplate\"></ng-container>   \r\n              -->\r\n              \r\n        <pep-bread-crumbs class=\"bread-crumbs\" [items]=\"breadCrumbsItems\" [addSpacing]=\"true\" [displayType]=\"'items'\"\r\n            (itemClick)=\"onBreadCrumbItemClick($event)\"></pep-bread-crumbs>\r\n    </ng-container>\r\n    <div pep-main-area class=\"main-area-container\">\r\n        <ng-container *ngTemplateOutlet=\"listTemplate\"></ng-container>\r\n    </div>\r\n</pep-page-layout>\r\n\r\n<ng-template #topBarTemplate>\r\n    <pep-top-bar [title]=\"title\" [inline]=\"inline\">\r\n        <div header-start-content>\r\n            <ng-content select=\"[left-buttons]\"></ng-content>\r\n        </div>\r\n        <div header-end-content>\r\n            <ng-content select=\"[right-buttons]\"></ng-content>\r\n        </div>\r\n        <pep-list-actions [sizeType]=\"inline ? 'sm' : 'md'\" [actions]=\"menuActions\"\r\n            (actionClick)=\"onMenuItemClicked($event)\"></pep-list-actions>\r\n        <pep-list-total [sizeType]=\"inline ? 'sm' : 'md'\" [totalRows]=\"customList ? customList.totalRows : -1\">\r\n        </pep-list-total>\r\n\r\n        <pep-search *ngIf=\"showSearch\" [sizeType]=\"inline ? 'sm' : 'md'\" (search)=\"onSearchChanged($event)\">\r\n        </pep-search>\r\n    </pep-top-bar>\r\n</ng-template>\r\n\r\n<!-- <ng-template #breadCrumbsTemplate>\r\n    <pep-bread-crumbs class=\"bread-crumbs\" [items]=\"breadCrumbsItems\" [addSpacing]=\"true\" [displayType]=\"'items'\"\r\n        (itemClick)=\"onBreadCrumbItemClick($event)\"></pep-bread-crumbs>\r\n</ng-template> -->\r\n\r\n<ng-template #listTemplate>\r\n    <div class=\"list-container\">\r\n        <pep-list #customList *ngIf=\"hasRows\" viewType=\"table\" [supportSorting]=\"supportSorting\"\r\n            [selectionTypeForActions]=\"allowMultipleSelection ? 'multi' : (allowSelection ? 'single' : 'none')\"\r\n            [pagerType]=\"pager.type\" [pageSize]=\"pager.size\" [pageIndex]=\"pager.index\" [noDataFoundMsg]=\"noDataFoundMsg\"\r\n            (fieldClick)=\"onCustomizeFieldClick($event)\" [firstFieldAsLink]=\"firstFieldAsLink\"\r\n            (selectedItemsChange)=\"onSelectedRowsChanged($event)\" (loadItems)=\"onLoadItems($event)\"\r\n            (loadPage)=\"onLoadPage($event)\" (valueChange)=\"onValueChanged($event)\">\r\n        </pep-list>\r\n        <ng-container *ngIf=\"!hasRows\">\r\n            <div class=\"noDataFoundMsg\">\r\n                <h2>{{noDataFoundMsg}}</h2>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</ng-template>"
        },
        {
            "name": "GenericListExampleComponent",
            "id": "component-GenericListExampleComponent-ac01860add74269ecdc0184ec063c5242091fac4db5cc50b8335284ecd2736c85d5f623c87298fff8cba43f559a7b3fbc6c34c50adfc797756366f3f85cb8105",
            "file": "projects/ngx-composite-lib-tester/src/app/generic-list-example/generic-list-example.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-generic-list-example",
            "styleUrls": [
                "./generic-list-example.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./generic-list-example.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "actions",
                    "defaultValue": "{        \r\n        get: async (data: PepSelectionData) => {\r\n            if (data?.selectionType === 0) {\r\n                /*const list = await this.dataSource.getList({ searchString: '', fromIndex: 0, toIndex: 20 });\r\n                if (list?.length === data?.rows.length) {\r\n                    return [];\r\n                } */\r\n            }\r\n            if (data?.rows.length === 1 && data?.selectionType !== 0) {\r\n                return [\r\n                    {\r\n                        title: 'Edit',\r\n                        handler: async (ddd) => {\r\n                            alert('edit');\r\n                        }\r\n                    },\r\n                    {\r\n                        title: 'Delete',\r\n                        handler: async (ddd) => {\r\n                            alert('delete');\r\n                        }\r\n                    }\r\n                ]\r\n            } else if (data?.rows.length > 1 || data?.selectionType === 0) {\r\n                return [\r\n                    {\r\n                        title: 'Delete',\r\n                        handler: async (ddd) => {\r\n                            alert('delete');\r\n                        }\r\n                    }\r\n                ]\r\n            } else return [];\r\n        }\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPepGenericListActions",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "breadCrumbsItems",
                    "defaultValue": "new Array<PepBreadCrumbItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "dataSource",
                    "defaultValue": "{\r\n        getList: (params) => {\r\n            const dataSource = FakeData.Addons;\r\n            const res = dataSource.map(addon => ({\r\n                UUID: addon.UUID,\r\n                Description: addon.Addon.Description,\r\n                Version: addon.Version,\r\n                Type: addon.Type,\r\n                CreationDate: addon.CreationDate,\r\n            }));\r\n\r\n            return Promise.resolve(res);\r\n        },\r\n        totalCount: FakeData.Addons.length * 5,\r\n        dataView: {            \r\n            Context: {\r\n                Name: '',\r\n                Profile: { InternalID: 0 },\r\n                ScreenSize: 'Landscape'\r\n            },\r\n            Type: 'Grid',\r\n            Title: '',\r\n            Fields: [\r\n                this.getRegularReadOnlyColumn('UUID'),\r\n                this.getRegularReadOnlyColumn('Description'),\r\n                this.getRegularReadOnlyColumn('Version'),\r\n                this.getRegularReadOnlyColumn('Type'),\r\n                this.getRegularReadOnlyColumn('CreationDate')\r\n            ],\r\n            Columns: [\r\n                { Width: 15 },\r\n                { Width: 30 },\r\n                { Width: 15 },\r\n                { Width: 20 },\r\n                { Width: 20 }\r\n            ],\r\n            FrozenColumnsCount: 0,\r\n            MinimumColumnWidth: 0            \r\n        }\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPepGenericListDataSource",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "menuItems",
                    "defaultValue": "new Array<PepMenuItem>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "pager",
                    "defaultValue": "{\r\n        type: 'pages',\r\n        size: 10,\r\n        index: 0\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPepGenericListPager",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedRowID",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getRegularReadOnlyColumn",
                    "args": [
                        {
                            "name": "columnId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "columnId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadBreadCrumbs",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBreadCrumbClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "IPepBreadCrumbItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IPepBreadCrumbItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMenuItemClicked",
                    "args": [
                        {
                            "name": "action",
                            "type": "IPepMenuItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "IPepMenuItemClickEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { IPepMenuItemClickEvent, PepMenuItem } from '@pepperi-addons/ngx-lib/menu';\r\nimport { IPepGenericListDataSource, IPepGenericListPager, IPepGenericListActions } from 'projects/ngx-composite-lib/generic-list';\r\nimport { PepSelectionData, DEFAULT_PAGE_SIZE } from '@pepperi-addons/ngx-lib/list';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PepBreadCrumbItem, IPepBreadCrumbItemClickEvent } from '@pepperi-addons/ngx-lib/bread-crumbs';\r\nimport { FakeData } from './fake-data';\r\n\r\n@Component({\r\n    selector: 'app-generic-list-example',\r\n    templateUrl: './generic-list-example.component.html',\r\n    styleUrls: ['./generic-list-example.component.scss']\r\n})\r\nexport class GenericListExampleComponent implements OnInit {\r\n    menuItems = new Array<PepMenuItem>();\r\n    breadCrumbsItems = new Array<PepBreadCrumbItem>();\r\n    pager: IPepGenericListPager = {\r\n        type: 'pages',\r\n        size: 10,\r\n        index: 0\r\n    };\r\n    private selectedRowID = '';\r\n\r\n\r\n    constructor(private translate: TranslateService) {\r\n        //\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.menuItems.push({\r\n            key: 'test',\r\n            text: 'test'\r\n        });\r\n\r\n        this.translate.get('ExampleComponentsTitle').subscribe((text) => {\r\n            this.loadBreadCrumbs();\r\n        });\r\n    }\r\n\r\n    private getRegularReadOnlyColumn(columnId: string): any {\r\n        return {\r\n            FieldID: columnId,\r\n            Type: 'TextBox',\r\n            Title: columnId,\r\n            Mandatory: false,\r\n            ReadOnly: true\r\n        }\r\n    }\r\n\r\n\r\n    dataSource: IPepGenericListDataSource = {\r\n        getList: (params) => {\r\n            const dataSource = FakeData.Addons;\r\n            const res = dataSource.map(addon => ({\r\n                UUID: addon.UUID,\r\n                Description: addon.Addon.Description,\r\n                Version: addon.Version,\r\n                Type: addon.Type,\r\n                CreationDate: addon.CreationDate,\r\n            }));\r\n\r\n            return Promise.resolve(res);\r\n        },\r\n        totalCount: FakeData.Addons.length * 5,\r\n        dataView: {            \r\n            Context: {\r\n                Name: '',\r\n                Profile: { InternalID: 0 },\r\n                ScreenSize: 'Landscape'\r\n            },\r\n            Type: 'Grid',\r\n            Title: '',\r\n            Fields: [\r\n                this.getRegularReadOnlyColumn('UUID'),\r\n                this.getRegularReadOnlyColumn('Description'),\r\n                this.getRegularReadOnlyColumn('Version'),\r\n                this.getRegularReadOnlyColumn('Type'),\r\n                this.getRegularReadOnlyColumn('CreationDate')\r\n            ],\r\n            Columns: [\r\n                { Width: 15 },\r\n                { Width: 30 },\r\n                { Width: 15 },\r\n                { Width: 20 },\r\n                { Width: 20 }\r\n            ],\r\n            FrozenColumnsCount: 0,\r\n            MinimumColumnWidth: 0            \r\n        }\r\n    }\r\n\r\n    actions: IPepGenericListActions = {        \r\n        get: async (data: PepSelectionData) => {\r\n            if (data?.selectionType === 0) {\r\n                /*const list = await this.dataSource.getList({ searchString: '', fromIndex: 0, toIndex: 20 });\r\n                if (list?.length === data?.rows.length) {\r\n                    return [];\r\n                } */\r\n            }\r\n            if (data?.rows.length === 1 && data?.selectionType !== 0) {\r\n                return [\r\n                    {\r\n                        title: 'Edit',\r\n                        handler: async (ddd) => {\r\n                            alert('edit');\r\n                        }\r\n                    },\r\n                    {\r\n                        title: 'Delete',\r\n                        handler: async (ddd) => {\r\n                            alert('delete');\r\n                        }\r\n                    }\r\n                ]\r\n            } else if (data?.rows.length > 1 || data?.selectionType === 0) {\r\n                return [\r\n                    {\r\n                        title: 'Delete',\r\n                        handler: async (ddd) => {\r\n                            alert('delete');\r\n                        }\r\n                    }\r\n                ]\r\n            } else return [];\r\n        }\r\n    }\r\n\r\n    loadBreadCrumbs() {\r\n        this.breadCrumbsItems.push(new PepBreadCrumbItem({\r\n            key: '1',\r\n            text: 'Crumb1',\r\n            title: 'Title1'\r\n        }));\r\n        this.breadCrumbsItems.push(new PepBreadCrumbItem({\r\n            key: '2',\r\n            text: 'Crumb2',\r\n            title: 'Title2'\r\n        }));\r\n\r\n    }\r\n\r\n    onMenuItemClicked(action: IPepMenuItemClickEvent): void {\r\n        alert(action.source.key);\r\n    }\r\n\r\n    onBreadCrumbClick(event: IPepBreadCrumbItemClickEvent) {\r\n        console.log('onBreadCrumbClick', event);\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-wrapper {\r\n    height: inherit;\r\n    display: grid ;\r\n    grid-template-rows: 1fr 1fr;\r\n    gap: 2rem;\r\n    padding-inline: 1rem;\r\n}",
                    "styleUrl": "./generic-list-example.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"example-wrapper\">\r\n    <pep-generic-list [data]=\"dataSource\" [actions]=\"actions\" [showTopBar]=\"true\" [breadCrumbsItems]=\"breadCrumbsItems\"\r\n        title=\"Generic list title\" [allowMultipleSelection]=\"true\" (breadCrumbItemClick)=\"onBreadCrumbClick($event)\">\r\n        <ng-container right-buttons>\r\n            <pep-menu class=\"pep-spacing-element\" [items]=\"menuItems\" [sizeType]=\"'md'\"\r\n                (menuItemClick)=\"onMenuItemClicked($event)\">\r\n            </pep-menu>\r\n            <pep-button class=\"pep-spacing-element\" [value]=\"'New'\" [sizeType]=\"'md'\" [styleType]=\"'strong'\">\r\n            </pep-button>\r\n        </ng-container>\r\n    </pep-generic-list>\r\n\r\n    <pep-generic-list [data]=\"dataSource\" [actions]=\"actions\" [inline]=\"true\" [breadCrumbsItems]=\"breadCrumbsItems\" [pager]=\"pager\"\r\n        title=\"Generic list inline title\" (breadCrumbItemClick)=\"onBreadCrumbClick($event)\">\r\n        <ng-container right-buttons>\r\n            <pep-menu class=\"pep-spacing-element\" [items]=\"menuItems\" [sizeType]=\"'sm'\"\r\n                (menuItemClick)=\"onMenuItemClicked($event)\">\r\n            </pep-menu>\r\n            <pep-button class=\"pep-spacing-element\" [value]=\"'New'\" [sizeType]=\"'sm'\" [styleType]=\"'strong'\">\r\n            </pep-button>\r\n        </ng-container>\r\n    </pep-generic-list>\r\n</div>"
        },
        {
            "name": "GroupButtonsSettingsComponent",
            "id": "component-GroupButtonsSettingsComponent-fb8ba864eea84fdbf71c85c59eb8e65732a409380c9ecd1cad5e72c9cbdaeb55c09a41a35256df85e587bd6e83715d66096ce71c51b9f6c262489a11746b44f6",
            "file": "projects/ngx-composite-lib/group-buttons-settings/group-buttons-settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pep-group-buttons-settings",
            "styleUrls": [
                "./group-buttons-settings.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./group-buttons-settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "btnKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "btnsArray",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Array<PepButton>",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "excludeKeys",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Array<string>",
                    "decorators": []
                },
                {
                    "name": "groupType",
                    "defaultValue": "'sizes'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "PepGroupbuttonsTypes",
                    "decorators": []
                },
                {
                    "name": "header",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "subHeader",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "useNone",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "btnkeyChange",
                    "defaultValue": "new EventEmitter<IPepButtonClickEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter<IPepButtonClickEvent>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_btnKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "none",
                    "defaultValue": "{key: 'none'}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PepButton",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "sizes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<PepButton>",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [
                {
                    "name": "arrayMerge",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getButtonsArray",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onKeyChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "IPepButtonClickEvent | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "IPepButtonClickEvent | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PepSizeType } from '@pepperi-addons/ngx-lib';\r\nimport { IPepButtonClickEvent, PepButton } from '@pepperi-addons/ngx-lib/button';\r\nimport { PepGroupbuttonsTypes } from './group-buttons-settings.model';\r\n\r\n@Component({\r\n    selector: 'pep-group-buttons-settings',\r\n    templateUrl: './group-buttons-settings.component.html',\r\n    styleUrls: ['./group-buttons-settings.component.scss']\r\n})\r\nexport class GroupButtonsSettingsComponent implements OnInit {\r\n\r\n    @Input() header = '';\r\n    @Input() subHeader = '';\r\n\r\n    @Input() groupType: PepGroupbuttonsTypes = 'sizes'; \r\n    @Input() btnsArray: Array<PepButton> = [];\r\n    @Input() excludeKeys: Array<string> = []; // for example ['xs','xl']\r\n\r\n    @Input() useNone = false;\r\n    @Input() disabled = false;\r\n\r\n    private _btnKey: any;\r\n    @Input()\r\n    set btnKey(value: any) {\r\n        if (!value) {\r\n            this._btnKey = '';\r\n        } else {\r\n            this._btnKey = value;\r\n        }\r\n    }\r\n    get btnKey(): any {\r\n        return this._btnKey;\r\n    }\r\n\r\n    @Output()\r\n    btnkeyChange: EventEmitter<IPepButtonClickEvent> = new EventEmitter<IPepButtonClickEvent>();\r\n    \r\n    \r\n    none: PepButton = {key: 'none'};\r\n    \r\n    sizes: Array<PepButton> = [];\r\n    \r\n    // pepB: PepSizeType | 'none' = \"xs\";\r\n\r\n    constructor(\r\n        private translate: TranslateService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void { \r\n        // Get the first translation for load all translations.\r\n        this.translate.get('SHADOW_SETTINGS.INTENSITY_SOFT').toPromise().then((typeSoft) => {\r\n            \r\n            this.none = { key: 'none', value: this.translate.instant('GENERAL.NONE'), callback: () => this.onKeyChange(null) };\r\n            \r\n            this.arrayMerge();\r\n        });\r\n    }\r\n\r\n    arrayMerge(){\r\n\r\n        this.btnsArray = this.getButtonsArray();\r\n        \r\n        // check if need to remove items from the buttons array\r\n        if(this.excludeKeys){\r\n            this.btnsArray = this.btnsArray.filter(i => !this.excludeKeys.find(f => f === i.key));\r\n        }\r\n        // check if need to add the None button\r\n        if(this.useNone){\r\n            this.btnsArray = [this.none].concat(this.btnsArray);\r\n        }\r\n    }\r\n\r\n    onKeyChange(event: IPepButtonClickEvent | null) {\r\n        this.btnKey = event?.source?.key || 'none';\r\n        this.btnkeyChange.emit(this.btnKey);\r\n    }\r\n\r\n    getButtonsArray() {\r\n        switch(this.groupType){\r\n            case 'custom':{\r\n                return this.btnsArray;\r\n            }\r\n            case 'sizes':{\r\n                return [\r\n                    { key: 'xs', value: this.translate.instant('GENERAL.XS'), callback: (event: any) => this.onKeyChange(event) },\r\n                    { key: 'sm', value: this.translate.instant('GENERAL.SM'), callback: (event: any) => this.onKeyChange(event) },\r\n                    { key: 'md', value: this.translate.instant('GENERAL.MD'), callback: (event: any) => this.onKeyChange(event) },\r\n                    { key: 'lg', value: this.translate.instant('GENERAL.LG'), callback: (event: any) => this.onKeyChange(event) },\r\n                    { key: 'xl', value: this.translate.instant('GENERAL.XL'), callback: (event: any) => this.onKeyChange(event) }\r\n                ];\r\n            }\r\n            case 'vertical-align':{\r\n                return [\r\n                    { key: 'start', value: this.translate.instant('GENERAL.VERTICAL_ALIGN.TOP'), callback: (event: IPepButtonClickEvent) => this.onKeyChange(event) },\r\n                    { key: 'center', value: this.translate.instant('GENERAL.VERTICAL_ALIGN.MIDDLE'), callback: (event: IPepButtonClickEvent) => this.onKeyChange(event) },\r\n                    { key: 'end', value: this.translate.instant('GENERAL.VERTICAL_ALIGN.BOTTOM'), callback: (event: IPepButtonClickEvent) => this.onKeyChange(event) }\r\n                ];\r\n            }\r\n            case 'horizontal-align': {\r\n                return [\r\n                    { key: 'left', iconName: 'text_align_right', callback: (event: any) => this.onKeyChange(event) },\r\n                    { key: 'center', iconName: 'text_align_center', callback: (event: any) => this.onKeyChange(event) },\r\n                    { key: 'right', iconName: 'text_align_left', callback: (event: any) => this.onKeyChange(event) },\r\n                ];\r\n            }\r\n            case 'font-weight':{\r\n                return [\r\n                    { key: 'normal', value: this.translate.instant('GENERAL.FONT_WEIGHT.NORMAL'), callback: (event: any) => this.onKeyChange(event) },\r\n                    { key: 'bold', value: this.translate.instant('GENERAL.FONT_WEIGHT.BOLD'), callback: (event: any) => this.onKeyChange(event) },\r\n                    { key: 'bolder', value: this.translate.instant('GENERAL.FONT_WEIGHT.BOLDER'), callback: (event: any) => this.onKeyChange(event) }\r\n                ]\r\n            }\r\n            case 'width-sizes':{\r\n                return [\r\n                        { key: 'narrow', value: this.translate.instant('GENERAL.WIDTH_SIZE.NARROW'), callback: (event: any) => this.onKeyChange(event) },\r\n                        { key: 'regular', value: this.translate.instant('GENERAL.WIDTH_SIZE.REGULAR'), callback: (event: any) => this.onKeyChange(event) },\r\n                        { key: 'wide', value: this.translate.instant('GENERAL.WIDTH_SIZE.WIDE'), callback: (event: any) => this.onKeyChange(event) }\r\n                ];\r\n            }\r\n\r\n            default: {\r\n                return [];\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@pepperi-addons/ngx-lib/src/core/style/abstracts/variables' as ngx-variables;\r\n\r\n:host {\r\n    width: 100%;\r\n    // max-width: 200px;\r\n\r\n    .shadow-size-group,\r\n    .shadow-type-group {\r\n        display: block;\r\n        margin-bottom: ngx-variables.$form-spacing;\r\n    }\r\n}",
                    "styleUrl": "./group-buttons-settings.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "btnKey": {
                    "name": "btnKey",
                    "setSignature": {
                        "name": "btnKey",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 26,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "btnKey",
                        "type": "any",
                        "returnType": "any",
                        "line": 33
                    }
                }
            },
            "templateData": "<label *ngIf=\"header != ''\" class=\"body-xl bold ellipsis\">{{header}}</label>\r\n<pep-field-title *ngIf=\"subHeader !=''\" [label]=\"subHeader\" [disabled]=\"disabled\"></pep-field-title>\r\n<pep-group-buttons [buttons]=\"btnsArray\" \r\n                   [selectedButtonKey]=\"btnKey\" \r\n                   [stretch]=\"true\" \r\n                   buttonsClass=\"md regular\" \r\n                   [buttonsDisabled]=\"disabled\" \r\n                   viewType=\"toggle\">\r\n</pep-group-buttons>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-9e6f72322431740f24700320358c5bb091c497fb5e4331999d4e77740f43da7c0d5bb2d645997a97f860ca86bb61f311cb55c8fe136f7096dd6410154fcb9c63",
            "file": "stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <storybook-button\r\n          *ngIf=\"user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogout.emit($event)\"\r\n          label=\"Log out\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogin.emit($event)\"\r\n          label=\"Log in\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          primary\r\n          size=\"small\"\r\n          (onClick)=\"onCreateAccount.emit($event)\"\r\n          label=\"Sign up\"\r\n        ></storybook-button>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\nsvg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nh1 {\r\n  font-weight: 900;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-dc14b12320300a3560aae9da5f0ea2923d91413cab32b5b2ecbb1832e735b7621b9f08e659d24dfe63817a4bf48114b0c2f97fd6bda0a718a6cfe00b9199f492",
            "file": "stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"onLogout.emit($event)\"\r\n      (onLogin)=\"onLogin.emit($event)\"\r\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\r\n    ></storybook-header>\r\n    <section>\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport default class PageComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n\r\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\r\n//   <article>\r\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\r\n\r\n// );\r\n// Page.propTypes = {\r\n//   user: PropTypes.shape({}),\r\n//   onLogin: PropTypes.func.isRequired,\r\n//   onLogout: PropTypes.func.isRequired,\r\n//   onCreateAccount: PropTypes.func.isRequired,\r\n// };\r\n\r\n// Page.defaultProps = {\r\n//   user: null,\r\n// };\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\nsection h2 {\r\n  font-weight: 900;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nsection p {\r\n  margin: 1em 0;\r\n}\r\n\r\nsection a {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\nsection ul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\nsection li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\nsection .tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\nsection .tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\nsection .tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\nsection .tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ShadowSettingsComponent",
            "id": "component-ShadowSettingsComponent-670c79f19431e3d6a71f2a01245f2fc6c932e145b3e26c0c834355aa9c5dc4e750f9f2d274bd7a2833913e464fca9f89e24aa67a362eea35db117ede31c75698",
            "file": "projects/ngx-composite-lib/shadow-settings/shadow-settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "pep-shadow-settings",
            "styleUrls": [
                "./shadow-settings.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./shadow-settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "shadow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "shadowChange",
                    "defaultValue": "new EventEmitter<PepShadowSettings>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter<PepShadowSettings>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_shadow",
                    "defaultValue": "new PepShadowSettings()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PepShadowSettings",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "shadowIntensities",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<PepButton>",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "shadowSizes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<PepButton>",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onIntensityChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "PepShadowIntensityType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "PepShadowIntensityType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSizeChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "PepSizeType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "PepSizeType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onUseChanged",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "raiseShadowChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PepSizeType } from '@pepperi-addons/ngx-lib';\r\nimport { IPepButtonClickEvent, PepButton } from '@pepperi-addons/ngx-lib/button';\r\nimport { PepShadowIntensityType, PepShadowSettings } from './shadow-settings.model';\r\n\r\n@Component({\r\n    selector: 'pep-shadow-settings',\r\n    templateUrl: './shadow-settings.component.html',\r\n    styleUrls: ['./shadow-settings.component.scss']\r\n})\r\nexport class ShadowSettingsComponent implements OnInit {\r\n\r\n    private _shadow: PepShadowSettings = new PepShadowSettings();\r\n    @Input()\r\n    set shadow(value: PepShadowSettings) {\r\n        if (!value) {\r\n            this._shadow = new PepShadowSettings();\r\n        } else {\r\n            this._shadow = value;\r\n        }\r\n    }\r\n    get shadow(): PepShadowSettings {\r\n        return this._shadow;\r\n    }\r\n\r\n    @Output()\r\n    shadowChange: EventEmitter<PepShadowSettings> = new EventEmitter<PepShadowSettings>();\r\n    \r\n    shadowSizes: Array<PepButton> = [];\r\n    shadowIntensities: Array<PepButton> = [];\r\n\r\n    constructor(\r\n        private translate: TranslateService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void { \r\n        // Get the first translation for load all translations.\r\n        this.translate.get('SHADOW_SETTINGS.INTENSITY_SOFT').toPromise().then((typeSoft) => {\r\n            this.shadowSizes = [\r\n                { key: 'sm', value: this.translate.instant('GENERAL.SM'), callback: () => this.onSizeChange('sm') },\r\n                { key: 'md', value: this.translate.instant('GENERAL.MD'), callback: () => this.onSizeChange('md') },\r\n                { key: 'lg', value: this.translate.instant('GENERAL.LG'), callback: () => this.onSizeChange('lg') },\r\n                { key: 'xl', value: this.translate.instant('GENERAL.XL'), callback: () => this.onSizeChange('xl') }\r\n            ];\r\n\r\n            this.shadowIntensities = [\r\n                { key: 'soft', value: typeSoft, callback: () => this.onIntensityChange('soft') },\r\n                { key: 'regular', value: this.translate.instant('SHADOW_SETTINGS.INTENSITY_REGULAR'), callback: () => this.onIntensityChange('regular') },\r\n                { key: 'hard', value: this.translate.instant('SHADOW_SETTINGS.INTENSITY_HARD'), callback: () => this.onIntensityChange('hard') }\r\n            ];\r\n        });\r\n    }\r\n\r\n\r\n    private raiseShadowChange() {\r\n        this.shadowChange.emit(this.shadow);\r\n    }\r\n\r\n    onUseChanged(value: boolean) {\r\n        this.shadow.use = value;\r\n        this.raiseShadowChange();\r\n    }\r\n\r\n    onSizeChange(value: PepSizeType) {\r\n        this.shadow.size = value;\r\n        this.raiseShadowChange();\r\n    }\r\n\r\n    onIntensityChange(value: PepShadowIntensityType) {\r\n        this.shadow.intensity = value;\r\n        this.raiseShadowChange();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use '~@pepperi-addons/ngx-lib/src/core/style/abstracts/variables' as ngx-variables;\r\n\r\n:host {\r\n    width: 100%;\r\n    // max-width: 200px;\r\n\r\n    .shadow-size-group,\r\n    .shadow-type-group {\r\n        display: block;\r\n        margin-bottom: ngx-variables.$form-spacing;\r\n    }\r\n}",
                    "styleUrl": "./shadow-settings.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "shadow": {
                    "name": "shadow",
                    "setSignature": {
                        "name": "shadow",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "PepShadowSettings",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "PepShadowSettings",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "shadow",
                        "type": "",
                        "returnType": "PepShadowSettings",
                        "line": 23
                    }
                }
            },
            "templateData": "<pep-checkbox class=\"checkbox-as-title\" [label]=\"'SHADOW_SETTINGS.TITLE' | translate\" [renderTitle]=\"false\" [value]=\"shadow.use\" (valueChange)=\"onUseChanged($event)\"></pep-checkbox>\r\n<pep-field-title [label]=\"'SHADOW_SETTINGS.SIZE' | translate\" [disabled]=\"!shadow.use\"></pep-field-title>\r\n<pep-group-buttons class=\"shadow-size-group\" [buttons]=\"shadowSizes\" [selectedButtonKey]=\"shadow.size\" [stretch]=\"true\" buttonsClass=\"md regular\" [buttonsDisabled]=\"!shadow.use\" viewType=\"toggle\">\r\n</pep-group-buttons>\r\n<pep-field-title [label]=\"'SHADOW_SETTINGS.INTENSITY' | translate\" [disabled]=\"!shadow.use\"></pep-field-title>\r\n<pep-group-buttons class=\"shadow-intensity-group\" [buttons]=\"shadowIntensities\" [selectedButtonKey]=\"shadow.intensity\" [stretch]=\"true\" buttonsClass=\"md regular\" [buttonsDisabled]=\"!shadow.use\" viewType=\"toggle\">\r\n</pep-group-buttons>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-42e693cdc6036075ebaa6d322166ed8f59916f9d23547fd4191173e43814de7544b0c456a4601c92936383fd4bc34f1b5d89d3c49a8b40f62c86c9778d562188",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ngx-composite-lib-tester/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PepAddonService } from '@pepperi-addons/ngx-lib';\r\nimport { NgxLibHelperModule } from './common/ngx-helper.module';\r\n\r\nimport { PepNgxCompositeLibModule } from '@pepperi-addons/ngx-composite-lib';\r\nimport { PepColorSettingsModule } from '@pepperi-addons/ngx-composite-lib/color-settings';\r\nimport { PepShadowSettingsModule } from '@pepperi-addons/ngx-composite-lib/shadow-settings';\r\nimport { PepGroupButtonsSettingsModule } from '@pepperi-addons/ngx-composite-lib/group-buttons-settings';\r\nimport { PepFileStatusPanelModule } from '@pepperi-addons/ngx-composite-lib/file-status-panel';\r\nimport { PepGenericListModule } from '@pepperi-addons/ngx-composite-lib/generic-list';\r\n\r\nimport { ComponentsExampleComponent } from './components-example/components-example.component';\r\nimport { GenericListExampleComponent } from './generic-list-example/generic-list-example.component';\r\n\r\nimport {\r\n    TranslateModule,\r\n    TranslateLoader,\r\n    TranslateService,\r\n} from '@ngx-translate/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        ComponentsExampleComponent,\r\n        GenericListExampleComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        AppRoutingModule,\r\n        NgxLibHelperModule,\r\n        PepNgxCompositeLibModule,\r\n        PepColorSettingsModule,\r\n        PepShadowSettingsModule,\r\n        PepGroupButtonsSettingsModule,\r\n        PepFileStatusPanelModule,\r\n        PepGenericListModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (addonService: PepAddonService) => \r\n                    PepAddonService.createMultiTranslateLoader(addonService, ['ngx-lib', 'ngx-composite-lib']),\r\n                deps: [PepAddonService]\r\n            }\r\n        }),\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { \r\n    constructor(\r\n        translate: TranslateService,\r\n        private pepAddonService: PepAddonService\r\n    ) {\r\n        this.pepAddonService.setDefaultTranslateLang(translate);\r\n    }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ComponentsExampleComponent"
                        },
                        {
                            "name": "GenericListExampleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "NgxLibHelperModule"
                        },
                        {
                            "name": "PepColorSettingsModule"
                        },
                        {
                            "name": "PepFileStatusPanelModule"
                        },
                        {
                            "name": "PepGenericListModule"
                        },
                        {
                            "name": "PepGroupButtonsSettingsModule"
                        },
                        {
                            "name": "PepNgxCompositeLibModule"
                        },
                        {
                            "name": "PepShadowSettingsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-f09fa78d75db45a98fd9852b6f527d662e591e2cd8a871de94cc55bddcb14486095247344b1f192b570fd629394a50b484bddb60c4807d08fb1a434c69fab45c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ngx-composite-lib-tester/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ComponentsExampleComponent } from './components-example/components-example.component';\r\nimport { GenericListExampleComponent } from './generic-list-example/generic-list-example.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: `generic-list-example`,\r\n        component: GenericListExampleComponent,\r\n    },\r\n    {\r\n        path: '**',\r\n        component: ComponentsExampleComponent,\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NgxLibHelperModule",
            "id": "module-NgxLibHelperModule-35b8312c341930dae0ae837b113298c06ed61e415e2f1200cb5d84d87863874810b4cb0029f0b979516432be34fb96a23fad67d4eb03cee100601438399eaba0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ngx-composite-lib-tester/src/app/common/ngx-helper.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport {\r\n    PepNgxLibModule,\r\n    PepAddonService,\r\n    PepCustomizationService,\r\n    PepFileService,\r\n} from '@pepperi-addons/ngx-lib';\r\nimport { PepAttachmentModule } from '@pepperi-addons/ngx-lib/attachment';\r\nimport { PepBreadCrumbsModule } from '@pepperi-addons/ngx-lib/bread-crumbs';\r\nimport { PepButtonModule } from '@pepperi-addons/ngx-lib/button';\r\nimport { PepCarouselModule } from '@pepperi-addons/ngx-lib/carousel';\r\nimport { PepCheckboxModule } from '@pepperi-addons/ngx-lib/checkbox';\r\nimport { PepColorModule } from '@pepperi-addons/ngx-lib/color';\r\nimport { PepDateModule } from '@pepperi-addons/ngx-lib/date';\r\nimport { PepGroupButtonsModule } from '@pepperi-addons/ngx-lib/group-buttons';\r\nimport { PepImageModule } from '@pepperi-addons/ngx-lib/image';\r\nimport { PepImagesFilmstripModule } from '@pepperi-addons/ngx-lib/images-filmstrip';\r\nimport { PepQuantitySelectorModule } from '@pepperi-addons/ngx-lib/quantity-selector';\r\nimport { PepRichHtmlTextareaModule } from '@pepperi-addons/ngx-lib/rich-html-textarea';\r\nimport { PepSearchModule } from '@pepperi-addons/ngx-lib/search';\r\nimport { PepSelectModule } from '@pepperi-addons/ngx-lib/select';\r\nimport { PepSliderModule } from '@pepperi-addons/ngx-lib/slider';\r\nimport { PepSeparatorModule } from '@pepperi-addons/ngx-lib/separator';\r\nimport { PepSideBarModule } from '@pepperi-addons/ngx-lib/side-bar';\r\nimport { PepSignatureModule } from '@pepperi-addons/ngx-lib/signature';\r\nimport { PepSizeDetectorModule } from '@pepperi-addons/ngx-lib/size-detector';\r\nimport { PepTextareaModule } from '@pepperi-addons/ngx-lib/textarea';\r\nimport { PepTextboxModule } from '@pepperi-addons/ngx-lib/textbox';\r\nimport { PepListModule } from '@pepperi-addons/ngx-lib/list';\r\nimport { PepMenuModule } from '@pepperi-addons/ngx-lib/menu';\r\nimport { PepTopBarModule } from '@pepperi-addons/ngx-lib/top-bar';\r\nimport { PepPageLayoutModule } from '@pepperi-addons/ngx-lib/page-layout';\r\n\r\nimport { PepFormModule } from '@pepperi-addons/ngx-lib/form';\r\n\r\nimport { PepSmartFiltersModule } from '@pepperi-addons/ngx-lib/smart-filters';\r\n\r\nimport {\r\n    PepIconModule,\r\n    PepIconRegistry,\r\n    pepIconSystemBolt,\r\n    pepIconNoImage,\r\n    pepIconNoImage2,\r\n    pepIconArrowTwoWaysVerT,\r\n    pepIconArrowDown,\r\n    pepIconArrowUp,\r\n    pepIconArrowRightAlt,\r\n    pepIconArrowLeftAlt,\r\n    pepIconArrowDownAlt,\r\n    pepIconArrowUpAlt,\r\n    pepIconNumberNumber,\r\n    pepIconNumberPlus,\r\n    pepIconSystemBin,\r\n    pepIconSystemEdit,\r\n    pepIconSystemClose,\r\n    pepIconSystemFilter,\r\n    pepIconSystemMenu,\r\n    pepIconSystemHome,\r\n    pepIconSystemSettings,\r\n    pepIconSystemQuestion,\r\n    pepIconSystemAvatar,\r\n    pepIconSystemDoor,\r\n    pepIconSystemPrint,\r\n    pepIconSystemSearch,\r\n    pepIconSystemSpinner,\r\n    pepIconSystemInfo,\r\n    pepIconShoppingCart,\r\n    pepIconTimeCal,\r\n    pepIconViewCardLg,\r\n    pepIconViewCardMd,\r\n    pepIconViewCardSm,\r\n    pepIconViewTable,\r\n    pepIconViewMatrix,\r\n    pepIconViewLine,\r\n} from '@pepperi-addons/ngx-lib/icon';\r\nconst pepIcons = [\r\n    pepIconSystemBolt,\r\n    pepIconNoImage,\r\n    pepIconNoImage2,\r\n    pepIconArrowTwoWaysVerT,\r\n    pepIconArrowDown,\r\n    pepIconArrowUp,\r\n    pepIconArrowRightAlt,\r\n    pepIconArrowLeftAlt,\r\n    pepIconArrowDownAlt,\r\n    pepIconArrowUpAlt,\r\n    pepIconNumberNumber,\r\n    pepIconNumberPlus,\r\n    pepIconSystemBin,\r\n    pepIconSystemEdit,\r\n    pepIconSystemClose,\r\n    pepIconSystemFilter,\r\n    pepIconSystemMenu,\r\n    pepIconSystemHome,\r\n    pepIconSystemSettings,\r\n    pepIconSystemQuestion,\r\n    pepIconSystemAvatar,\r\n    pepIconSystemDoor,\r\n    pepIconSystemPrint,\r\n    pepIconSystemSearch,\r\n    pepIconSystemSpinner,\r\n    pepIconSystemInfo,\r\n    pepIconShoppingCart,\r\n    pepIconTimeCal,\r\n    pepIconViewCardLg,\r\n    pepIconViewCardMd,\r\n    pepIconViewCardSm,\r\n    pepIconViewTable,\r\n    pepIconViewMatrix,\r\n    pepIconViewLine,\r\n];\r\n\r\nconst pepperiComponentsModules = [\r\n    PepAttachmentModule,\r\n    PepCarouselModule,\r\n    PepBreadCrumbsModule,\r\n    PepButtonModule,\r\n    PepCheckboxModule,\r\n    PepColorModule,\r\n    PepDateModule,\r\n    PepGroupButtonsModule,\r\n    PepImageModule,\r\n    PepImagesFilmstripModule,\r\n    PepListModule,\r\n    PepCheckboxModule,\r\n    PepQuantitySelectorModule,\r\n    PepRichHtmlTextareaModule,\r\n    PepSearchModule,\r\n    PepSelectModule,\r\n    PepSeparatorModule,\r\n    PepSliderModule,\r\n    PepSideBarModule,\r\n    PepSignatureModule,\r\n    PepSizeDetectorModule,\r\n    PepTextareaModule,\r\n    PepTextboxModule,\r\n    PepIconModule,\r\n    PepMenuModule,\r\n    PepTopBarModule,\r\n    PepPageLayoutModule,\r\n    PepSmartFiltersModule,\r\n    PepFormModule\r\n];\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n        CommonModule,\r\n        PepNgxLibModule,\r\n        pepperiComponentsModules,\r\n    ],\r\n    exports: [PepNgxLibModule, pepperiComponentsModules],\r\n})\r\nexport class NgxLibHelperModule {\r\n    constructor(\r\n        private pepperiIconRegistry: PepIconRegistry,\r\n    ) {\r\n        this.pepperiIconRegistry.registerIcons(pepIcons);\r\n    }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PepColorSettingsModule",
            "id": "module-PepColorSettingsModule-5c9ed6ccb4730960e57ee8af21d0f3aa09b02439d900bba74ff1392c80e7e52dd47f439344710412a0ef649449250cc366d2e99c51a21e04213bd4ff93b5e5af",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ngx-composite-lib/color-settings/color-settings.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PepNgxLibModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepColorModule } from '@pepperi-addons/ngx-lib/color';\r\nimport { PepCheckboxModule } from '@pepperi-addons/ngx-lib/checkbox';\r\nimport { PepSliderModule } from '@pepperi-addons/ngx-lib/slider';\r\n\r\nimport { ColorSettingsComponent } from './color-settings.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ColorSettingsComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        PepNgxLibModule,\r\n        PepCheckboxModule,\r\n        PepColorModule,\r\n        PepSliderModule\r\n    ],\r\n    exports: [ColorSettingsComponent],\r\n})\r\nexport class PepColorSettingsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ColorSettingsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ColorSettingsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PepDraggableItemModule",
            "id": "module-PepDraggableItemModule-606dc2a717e226547b953a7681a24961d3664fc6c83afc9114884b992e71b937a3bc965f98c09f5700a863e322e9035af721e392e82bb0be041c32ed6f1e36c5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ngx-composite-lib/draggable-item/draggable-item.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PepNgxLibModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepButtonModule } from '@pepperi-addons/ngx-lib/button';\r\n\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\n\r\nimport { DraggableItemComponent } from './draggable-item.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DraggableItemComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        PepNgxLibModule,\r\n        PepButtonModule,\r\n        DragDropModule\r\n    ],\r\n    exports: [DraggableItemComponent],\r\n})\r\nexport class PepDraggableItemModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DraggableItemComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DraggableItemComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PepFileStatusPanelModule",
            "id": "module-PepFileStatusPanelModule-bd74fc5ca242e53960e7b12b7a60e0f502d022cfb9a6d03e9f252fbb204ad904c6d5e83ba50fbeec93790feb5c09f4c09efcee9aef7ced1bef67535b50b4b446",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ngx-composite-lib/file-status-panel/file-status-panel.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PepFileService, PepAddonService, PepNgxLibModule } from '@pepperi-addons/ngx-lib';\r\nimport { FileStatusPanelComponent } from './file-status-panel.component';\r\nimport { PepTextboxModule } from '@pepperi-addons/ngx-lib/textbox';\r\nimport { PepTopBarModule } from '@pepperi-addons/ngx-lib/top-bar';\r\nimport { PepDialogModule } from '@pepperi-addons/ngx-lib/dialog';\r\nimport { PepButtonModule } from '@pepperi-addons/ngx-lib/button';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FileStatusPanelComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        PepTopBarModule,\r\n        PepTextboxModule,\r\n        PepButtonModule,\r\n        PepDialogModule,\r\n    ],\r\n    exports: [FileStatusPanelComponent]\r\n})\r\n\r\nexport class PepFileStatusPanelModule { \r\n    \r\n}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FileStatusPanelComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FileStatusPanelComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PepGenericListModule",
            "id": "module-PepGenericListModule-a18130c8cfd5008f81788a038a289a68218259d3822180091e6c5f42ad3bd2ed523f54f3af845f3947e7dd6dcd6bc5d53913c2d5d63c38645bfa59a564afcf4b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ngx-composite-lib/generic-list/generic-list.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GenericListComponent } from './generic-list.component';\r\nimport { PepNgxLibModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepListModule } from '@pepperi-addons/ngx-lib/list';\r\nimport { PepFormModule } from '@pepperi-addons/ngx-lib/form';\r\nimport { PepMenuModule } from '@pepperi-addons/ngx-lib/menu';\r\nimport { PepPageLayoutModule } from '@pepperi-addons/ngx-lib/page-layout';\r\nimport { PepTopBarModule } from '@pepperi-addons/ngx-lib/top-bar';\r\nimport { PepSearchModule } from '@pepperi-addons/ngx-lib/search';\r\nimport { PepBreadCrumbsModule } from '@pepperi-addons/ngx-lib/bread-crumbs';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        GenericListComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        PepNgxLibModule,\r\n        PepListModule,\r\n        PepFormModule,\r\n        PepMenuModule,\r\n        PepPageLayoutModule,\r\n        PepTopBarModule,\r\n        PepSearchModule,\r\n        PepBreadCrumbsModule\r\n    ],\r\n    exports: [GenericListComponent],\r\n})\r\nexport class PepGenericListModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GenericListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "GenericListComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PepGroupButtonsSettingsModule",
            "id": "module-PepGroupButtonsSettingsModule-49a4c2b26069948ace654372b40dfa6e40408a802e5c11c1ebe3975ff6a15a1aff3408dfd67e5921e3541a5deb804840ec704d49c043744b1d84a2b3b889530c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ngx-composite-lib/group-buttons-settings/group-buttons-settings.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GroupButtonsSettingsComponent } from './group-buttons-settings.component';\r\nimport { PepNgxLibModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\nimport { PepGroupButtonsModule } from '@pepperi-addons/ngx-lib/group-buttons';\r\nimport { PepIconRegistry, pepIconTextAlignCenter, pepIconTextAlignLeft, pepIconTextAlignRight } from '@pepperi-addons/ngx-lib/icon';\r\n\r\nconst pepIcons = [\r\n    pepIconTextAlignCenter, \r\n    pepIconTextAlignLeft, \r\n    pepIconTextAlignRight\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        GroupButtonsSettingsComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        PepNgxLibModule,\r\n        PepFieldTitleModule,\r\n        PepGroupButtonsModule,\r\n    ],\r\n    exports: [GroupButtonsSettingsComponent]\r\n})\r\nexport class PepGroupButtonsSettingsModule { \r\n    constructor(\r\n        private pepIconRegistry: PepIconRegistry,\r\n    ) {\r\n        this.pepIconRegistry.registerIcons(pepIcons);\r\n    }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GroupButtonsSettingsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "GroupButtonsSettingsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PepNgxCompositeLibModule",
            "id": "module-PepNgxCompositeLibModule-2f4017442465aac099b49250c4f514077c7346141f78cc773a688826d06b7cff01884b9f48037d93018296971dc4224c804e9cbe95b89c38b03f0388b17ef698",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ngx-composite-lib/src/ngx-composite-lib.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\n// import { TranslateModule } from '@ngx-translate/core';\r\n// import { CommonModule } from '@angular/common';\r\n// import { HttpClientModule } from '@angular/common/http';\r\n// import { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        \r\n    ],\r\n    imports: [\r\n        // CommonModule, HttpClientModule, ReactiveFormsModule\r\n    ],\r\n    exports: [\r\n        // TranslateModule\r\n    ]\r\n})\r\nexport class PepNgxCompositeLibModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PepNgxHelperModule",
            "id": "module-PepNgxHelperModule-180f164432a5f309700320b22dced51dc5c041b8b86279f4ae8feb47b9330214f7d013e84fbf8a56d434dfb3591a71ec24855ab3a193a814f8d6dbd45cae49e5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ngx-composite-lib/src/core/common/modules/ngx-helper-module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { PepNgxLibModule } from '@pepperi-addons/ngx-lib';\r\n\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nexport function HttpLoaderFactory(httpClient: HttpClient) {\r\n    return new TranslateHttpLoader(httpClient, '/assets/ngx-lib/i18n/', '.ngx-lib.json');\r\n}\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n        CommonModule,\r\n        BrowserAnimationsModule,\r\n        PepNgxLibModule,       \r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: HttpLoaderFactory,\r\n                deps: [HttpClient],\r\n            },\r\n        }),\r\n    ]\r\n})\r\nexport class PepNgxHelperModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PepShadowSettingsModule",
            "id": "module-PepShadowSettingsModule-e7d8aff1381494ac9e5e504443363bef4dd7e40faf1cfff998b767915f3c78e327e2c7fb046b6e2a0931ece3819c1a179ee01f147d09b84303b8462b69f07e82",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ngx-composite-lib/shadow-settings/shadow-settings.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShadowSettingsComponent } from './shadow-settings.component';\r\nimport { PepNgxLibModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepCheckboxModule } from '@pepperi-addons/ngx-lib/checkbox';\r\nimport { PepFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\nimport { PepGroupButtonsModule } from '@pepperi-addons/ngx-lib/group-buttons';\r\nimport { PepSliderModule } from '@pepperi-addons/ngx-lib/slider';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ShadowSettingsComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        PepNgxLibModule,\r\n        PepCheckboxModule,\r\n        PepFieldTitleModule,\r\n        PepGroupButtonsModule,\r\n        PepSliderModule\r\n    ],\r\n    exports: [ShadowSettingsComponent],\r\n})\r\nexport class PepShadowSettingsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ShadowSettingsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ShadowSettingsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Base",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-composite-lib/generic-list/generic-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-composite-lib/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-composite-lib-tester/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-composite-lib-tester/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-composite-lib-tester/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    production: false\r\n}"
            },
            {
                "name": "FakeData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-composite-lib-tester/src/app/generic-list-example/fake-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    Addons: [\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '2e51566e-7035-42dd-a7c2-fb92bc4ed135',\r\n            Addon: {\r\n                UUID: 'e738c47c-ed34-49a9-9c02-f8fb5209d151',\r\n                Name: 'Add-ons Manager',\r\n                Description: 'Manage your add-ons',\r\n                SystemData:\r\n                    '{\"Versions\":[\"v1.0\"],\"EditorName\":\"addons_manager\",\"AngularPlugin\":true}',\r\n                Hidden: true,\r\n                Type: 1,\r\n                CreationDate: '2020-04-22T11:56:09.863Z',\r\n                ModificationDate: '2020-06-08T10:34:40.417Z',\r\n            },\r\n            Version: 'v1.0',\r\n            SystemData:\r\n                '{\"Version\":\"v1.0\",\"Editors\":[{\"ParentPackageName\":\"Configuration\",\"PackageName\":\"addons_manager\",\"Description\":\"Manage Addons\"}]}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/e738c47c-ed34-49a9-9c02-f8fb5209d151/v1.0/',\r\n            CreationDate: '2020-04-22T11:58:42.443Z',\r\n            ModificationDate: '2020-04-22T11:58:50.587Z',\r\n        },\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '31f078b4-e368-4f95-b512-15cb3d2d6fac',\r\n            Addon: {\r\n                UUID: 'bd629d5f-a7b4-4d03-9e7c-67865a6d82a9',\r\n                Name: 'Addons Manager',\r\n                Description: 'Manage the addons (install, uninstall, upgrade)',\r\n                SystemData:\r\n                    '{\"AngularPlugin\":true,\"EditorName\":\"addons_manager\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-08T09:39:08.703Z',\r\n                ModificationDate: '2020-08-05T13:19:45.87Z',\r\n            },\r\n            Version: '0.3.3',\r\n            SystemData: '{\"Version\":\"0.3.3\",\"AutomaticUpgrade\":\"true\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/bd629d5f-a7b4-4d03-9e7c-67865a6d82a9/0.3.3/',\r\n            CreationDate: '2020-06-21T13:19:14.54Z',\r\n            ModificationDate: '2020-08-03T08:19:09.013Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '14fb64d8-2b2c-4dec-8563-ac9fa98cd701',\r\n            Addon: {\r\n                UUID: 'fcb7ced2-4c81-4705-9f2b-89310d45e6c7',\r\n                Name: 'Automated Jobs',\r\n                Description: 'Run, Schedule and Audit your jobs',\r\n                SystemData: '{\"AngularPlugin\":true,\"EditorName\":\"scheduler\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-09T07:44:49.883Z',\r\n                ModificationDate: '2020-06-10T09:14:07.817Z',\r\n            },\r\n            Version: '1.0.53',\r\n            SystemData: '{\"Version\":\"1.0.53\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/fcb7ced2-4c81-4705-9f2b-89310d45e6c7/1.0.53/',\r\n            CreationDate: '2020-06-09T09:20:16.427Z',\r\n            ModificationDate: '2020-08-30T12:01:12.083Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: 'ba0adbdc-52e2-4049-816b-41d67b4a5bb7',\r\n            Addon: {\r\n                UUID: '1e66237b-b604-450e-92cf-81bcd171185a',\r\n                Name: 'CPI Node',\r\n                Description: 'Manages the embeded Node.js app in the CPI',\r\n                SystemData:\r\n                    '{ \"Versions\": [\"1.0.0\"], \"AngularPlugin\":true, \"EditorName\":\"editor\"  }',\r\n                Hidden: true,\r\n                Type: 2,\r\n                CreationDate: '2020-05-25T08:31:44.01Z',\r\n                ModificationDate: '2020-06-23T10:19:45.763Z',\r\n            },\r\n            Version: '0.0.3',\r\n            SystemData: '{\"Version\":\"0.0.3\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/1e66237b-b604-450e-92cf-81bcd171185a/0.0.3/',\r\n            CreationDate: '2020-06-17T14:16:31.71Z',\r\n            ModificationDate: '2020-08-27T11:17:12.67Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '1c24db9d-3c6f-4814-a92f-ac45a991df74',\r\n            Addon: {\r\n                UUID: '00000000-0000-0000-0000-000000abcdef',\r\n                Name: 'Cross Platforms API',\r\n                Description: 'Cross Platforms API (CPAPI)',\r\n                SystemData: '{}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-02T09:16:49.223Z',\r\n                ModificationDate: '2020-08-05T13:29:18.277Z',\r\n            },\r\n            Version: 'V106',\r\n            SystemData: '{\"Version\":\"V106\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/00000000-0000-0000-0000-000000abcdef/V106/',\r\n            CreationDate: '2020-06-17T20:04:02.857Z',\r\n            ModificationDate: '2020-08-05T08:48:45.45Z',\r\n        },\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '2251566e-7035-42dd-a7c2-fb92bc4ed135',\r\n            Addon: {\r\n                UUID: 'e738c47c-ed34-49a9-9c02-f8fb5209d151',\r\n                Name: 'Add-ons Manager',\r\n                Description: 'Manage your add-ons',\r\n                SystemData:\r\n                    '{\"Versions\":[\"v1.0\"],\"EditorName\":\"addons_manager\",\"AngularPlugin\":true}',\r\n                Hidden: true,\r\n                Type: 1,\r\n                CreationDate: '2020-04-22T11:56:09.863Z',\r\n                ModificationDate: '2020-06-08T10:34:40.417Z',\r\n            },\r\n            Version: 'v1.0',\r\n            SystemData:\r\n                '{\"Version\":\"v1.0\",\"Editors\":[{\"ParentPackageName\":\"Configuration\",\"PackageName\":\"addons_manager\",\"Description\":\"Manage Addons\"}]}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/e738c47c-ed34-49a9-9c02-f8fb5209d151/v1.0/',\r\n            CreationDate: '2020-04-22T11:58:42.443Z',\r\n            ModificationDate: '2020-04-22T11:58:50.587Z',\r\n        },\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '33f078b4-e368-4f95-b512-15cb3d2d6fac',\r\n            Addon: {\r\n                UUID: 'bd629d5f-a7b4-4d03-9e7c-67865a6d82a9',\r\n                Name: 'Addons Manager',\r\n                Description: 'Manage the addons (install, uninstall, upgrade)',\r\n                SystemData:\r\n                    '{\"AngularPlugin\":true,\"EditorName\":\"addons_manager\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-08T09:39:08.703Z',\r\n                ModificationDate: '2020-08-05T13:19:45.87Z',\r\n            },\r\n            Version: '0.3.3',\r\n            SystemData: '{\"Version\":\"0.3.3\",\"AutomaticUpgrade\":\"true\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/bd629d5f-a7b4-4d03-9e7c-67865a6d82a9/0.3.3/',\r\n            CreationDate: '2020-06-21T13:19:14.54Z',\r\n            ModificationDate: '2020-08-03T08:19:09.013Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '44fb64d8-2b2c-4dec-8563-ac9fa98cd701',\r\n            Addon: {\r\n                UUID: 'fcb7ced2-4c81-4705-9f2b-89310d45e6c7',\r\n                Name: 'Automated Jobs',\r\n                Description: 'Run, Schedule and Audit your jobs',\r\n                SystemData: '{\"AngularPlugin\":true,\"EditorName\":\"scheduler\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-09T07:44:49.883Z',\r\n                ModificationDate: '2020-06-10T09:14:07.817Z',\r\n            },\r\n            Version: '1.0.53',\r\n            SystemData: '{\"Version\":\"1.0.53\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/fcb7ced2-4c81-4705-9f2b-89310d45e6c7/1.0.53/',\r\n            CreationDate: '2020-06-09T09:20:16.427Z',\r\n            ModificationDate: '2020-08-30T12:01:12.083Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '50adbdc-52e2-4049-816b-41d67b4a5bb7',\r\n            Addon: {\r\n                UUID: '1e66237b-b604-450e-92cf-81bcd171185a',\r\n                Name: 'CPI Node',\r\n                Description: 'Manages the embeded Node.js app in the CPI',\r\n                SystemData:\r\n                    '{ \"Versions\": [\"1.0.0\"], \"AngularPlugin\":true, \"EditorName\":\"editor\"  }',\r\n                Hidden: true,\r\n                Type: 2,\r\n                CreationDate: '2020-05-25T08:31:44.01Z',\r\n                ModificationDate: '2020-06-23T10:19:45.763Z',\r\n            },\r\n            Version: '0.0.3',\r\n            SystemData: '{\"Version\":\"0.0.3\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/1e66237b-b604-450e-92cf-81bcd171185a/0.0.3/',\r\n            CreationDate: '2020-06-17T14:16:31.71Z',\r\n            ModificationDate: '2020-08-27T11:17:12.67Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '6c24db9d-3c6f-4814-a92f-ac45a991df74',\r\n            Addon: {\r\n                UUID: '00000000-0000-0000-0000-000000abcdef',\r\n                Name: 'Cross Platforms API',\r\n                Description: 'Cross Platforms API (CPAPI)',\r\n                SystemData: '{}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-02T09:16:49.223Z',\r\n                ModificationDate: '2020-08-05T13:29:18.277Z',\r\n            },\r\n            Version: 'V106',\r\n            SystemData: '{\"Version\":\"V106\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/00000000-0000-0000-0000-000000abcdef/V106/',\r\n            CreationDate: '2020-06-17T20:04:02.857Z',\r\n            ModificationDate: '2020-08-05T08:48:45.45Z',\r\n        },\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '7e51566e-7035-42dd-a7c2-fb92bc4ed135',\r\n            Addon: {\r\n                UUID: 'e738c47c-ed34-49a9-9c02-f8fb5209d151',\r\n                Name: 'Add-ons Manager',\r\n                Description: 'Manage your add-ons',\r\n                SystemData:\r\n                    '{\"Versions\":[\"v1.0\"],\"EditorName\":\"addons_manager\",\"AngularPlugin\":true}',\r\n                Hidden: true,\r\n                Type: 1,\r\n                CreationDate: '2020-04-22T11:56:09.863Z',\r\n                ModificationDate: '2020-06-08T10:34:40.417Z',\r\n            },\r\n            Version: 'v1.0',\r\n            SystemData:\r\n                '{\"Version\":\"v1.0\",\"Editors\":[{\"ParentPackageName\":\"Configuration\",\"PackageName\":\"addons_manager\",\"Description\":\"Manage Addons\"}]}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/e738c47c-ed34-49a9-9c02-f8fb5209d151/v1.0/',\r\n            CreationDate: '2020-04-22T11:58:42.443Z',\r\n            ModificationDate: '2020-04-22T11:58:50.587Z',\r\n        },\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '81f078b4-e368-4f95-b512-15cb3d2d6fac',\r\n            Addon: {\r\n                UUID: 'bd629d5f-a7b4-4d03-9e7c-67865a6d82a9',\r\n                Name: 'Addons Manager',\r\n                Description: 'Manage the addons (install, uninstall, upgrade)',\r\n                SystemData:\r\n                    '{\"AngularPlugin\":true,\"EditorName\":\"addons_manager\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-08T09:39:08.703Z',\r\n                ModificationDate: '2020-08-05T13:19:45.87Z',\r\n            },\r\n            Version: '0.3.3',\r\n            SystemData: '{\"Version\":\"0.3.3\",\"AutomaticUpgrade\":\"true\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/bd629d5f-a7b4-4d03-9e7c-67865a6d82a9/0.3.3/',\r\n            CreationDate: '2020-06-21T13:19:14.54Z',\r\n            ModificationDate: '2020-08-03T08:19:09.013Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '94fb64d8-2b2c-4dec-8563-ac9fa98cd701',\r\n            Addon: {\r\n                UUID: 'fcb7ced2-4c81-4705-9f2b-89310d45e6c7',\r\n                Name: 'Automated Jobs',\r\n                Description: 'Run, Schedule and Audit your jobs',\r\n                SystemData: '{\"AngularPlugin\":true,\"EditorName\":\"scheduler\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-09T07:44:49.883Z',\r\n                ModificationDate: '2020-06-10T09:14:07.817Z',\r\n            },\r\n            Version: '1.0.53',\r\n            SystemData: '{\"Version\":\"1.0.53\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/fcb7ced2-4c81-4705-9f2b-89310d45e6c7/1.0.53/',\r\n            CreationDate: '2020-06-09T09:20:16.427Z',\r\n            ModificationDate: '2020-08-30T12:01:12.083Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '100adbdc-52e2-4049-816b-41d67b4a5bb7',\r\n            Addon: {\r\n                UUID: '1e66237b-b604-450e-92cf-81bcd171185a',\r\n                Name: 'CPI Node',\r\n                Description: 'Manages the embeded Node.js app in the CPI',\r\n                SystemData:\r\n                    '{ \"Versions\": [\"1.0.0\"], \"AngularPlugin\":true, \"EditorName\":\"editor\"  }',\r\n                Hidden: true,\r\n                Type: 2,\r\n                CreationDate: '2020-05-25T08:31:44.01Z',\r\n                ModificationDate: '2020-06-23T10:19:45.763Z',\r\n            },\r\n            Version: '0.0.3',\r\n            SystemData: '{\"Version\":\"0.0.3\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/1e66237b-b604-450e-92cf-81bcd171185a/0.0.3/',\r\n            CreationDate: '2020-06-17T14:16:31.71Z',\r\n            ModificationDate: '2020-08-27T11:17:12.67Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '1124db9d-3c6f-4814-a92f-ac45a991df74',\r\n            Addon: {\r\n                UUID: '00000000-0000-0000-0000-000000abcdef',\r\n                Name: 'Cross Platforms API',\r\n                Description: 'Cross Platforms API (CPAPI)',\r\n                SystemData: '{}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-02T09:16:49.223Z',\r\n                ModificationDate: '2020-08-05T13:29:18.277Z',\r\n            },\r\n            Version: 'V106',\r\n            SystemData: '{\"Version\":\"V106\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/00000000-0000-0000-0000-000000abcdef/V106/',\r\n            CreationDate: '2020-06-17T20:04:02.857Z',\r\n            ModificationDate: '2020-08-05T08:48:45.45Z',\r\n        },\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '1251566e-7035-42dd-a7c2-fb92bc4ed135',\r\n            Addon: {\r\n                UUID: 'e738c47c-ed34-49a9-9c02-f8fb5209d151',\r\n                Name: 'Add-ons Manager',\r\n                Description: 'Manage your add-ons',\r\n                SystemData:\r\n                    '{\"Versions\":[\"v1.0\"],\"EditorName\":\"addons_manager\",\"AngularPlugin\":true}',\r\n                Hidden: true,\r\n                Type: 1,\r\n                CreationDate: '2020-04-22T11:56:09.863Z',\r\n                ModificationDate: '2020-06-08T10:34:40.417Z',\r\n            },\r\n            Version: 'v1.0',\r\n            SystemData:\r\n                '{\"Version\":\"v1.0\",\"Editors\":[{\"ParentPackageName\":\"Configuration\",\"PackageName\":\"addons_manager\",\"Description\":\"Manage Addons\"}]}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/e738c47c-ed34-49a9-9c02-f8fb5209d151/v1.0/',\r\n            CreationDate: '2020-04-22T11:58:42.443Z',\r\n            ModificationDate: '2020-04-22T11:58:50.587Z',\r\n        },\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '13f078b4-e368-4f95-b512-15cb3d2d6fac',\r\n            Addon: {\r\n                UUID: 'bd629d5f-a7b4-4d03-9e7c-67865a6d82a9',\r\n                Name: 'Addons Manager',\r\n                Description: 'Manage the addons (install, uninstall, upgrade)',\r\n                SystemData:\r\n                    '{\"AngularPlugin\":true,\"EditorName\":\"addons_manager\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-08T09:39:08.703Z',\r\n                ModificationDate: '2020-08-05T13:19:45.87Z',\r\n            },\r\n            Version: '0.3.3',\r\n            SystemData: '{\"Version\":\"0.3.3\",\"AutomaticUpgrade\":\"true\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/bd629d5f-a7b4-4d03-9e7c-67865a6d82a9/0.3.3/',\r\n            CreationDate: '2020-06-21T13:19:14.54Z',\r\n            ModificationDate: '2020-08-03T08:19:09.013Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '14fb64d8-2b2c-4dec-8563-ac9fa98cd731',\r\n            Addon: {\r\n                UUID: 'fcb7ced2-4c81-4705-9f2b-89310d45e6c7',\r\n                Name: 'Automated Jobs',\r\n                Description: 'Run, Schedule and Audit your jobs',\r\n                SystemData: '{\"AngularPlugin\":true,\"EditorName\":\"scheduler\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-09T07:44:49.883Z',\r\n                ModificationDate: '2020-06-10T09:14:07.817Z',\r\n            },\r\n            Version: '1.0.53',\r\n            SystemData: '{\"Version\":\"1.0.53\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/fcb7ced2-4c81-4705-9f2b-89310d45e6c7/1.0.53/',\r\n            CreationDate: '2020-06-09T09:20:16.427Z',\r\n            ModificationDate: '2020-08-30T12:01:12.083Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '150adbdc-52e2-4049-816b-41d67b4a5bb7',\r\n            Addon: {\r\n                UUID: '1e66237b-b604-450e-92cf-81bcd171185a',\r\n                Name: 'CPI Node',\r\n                Description: 'Manages the embeded Node.js app in the CPI',\r\n                SystemData:\r\n                    '{ \"Versions\": [\"1.0.0\"], \"AngularPlugin\":true, \"EditorName\":\"editor\"  }',\r\n                Hidden: true,\r\n                Type: 2,\r\n                CreationDate: '2020-05-25T08:31:44.01Z',\r\n                ModificationDate: '2020-06-23T10:19:45.763Z',\r\n            },\r\n            Version: '0.0.3',\r\n            SystemData: '{\"Version\":\"0.0.3\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/1e66237b-b604-450e-92cf-81bcd171185a/0.0.3/',\r\n            CreationDate: '2020-06-17T14:16:31.71Z',\r\n            ModificationDate: '2020-08-27T11:17:12.67Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '1624db9d-3c6f-4814-a92f-ac45a991df74',\r\n            Addon: {\r\n                UUID: '00000000-0000-0000-0000-000000abcdef',\r\n                Name: 'Cross Platforms API',\r\n                Description: 'Cross Platforms API (CPAPI)',\r\n                SystemData: '{}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-02T09:16:49.223Z',\r\n                ModificationDate: '2020-08-05T13:29:18.277Z',\r\n            },\r\n            Version: 'V106',\r\n            SystemData: '{\"Version\":\"V106\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/00000000-0000-0000-0000-000000abcdef/V106/',\r\n            CreationDate: '2020-06-17T20:04:02.857Z',\r\n            ModificationDate: '2020-08-05T08:48:45.45Z',\r\n        }\r\n    ],\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "pepIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-composite-lib/group-buttons-settings/group-buttons-settings.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    pepIconTextAlignCenter, \r\n    pepIconTextAlignLeft, \r\n    pepIconTextAlignRight\r\n]"
            },
            {
                "name": "pepIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-composite-lib-tester/src/app/common/ngx-helper.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    pepIconSystemBolt,\r\n    pepIconNoImage,\r\n    pepIconNoImage2,\r\n    pepIconArrowTwoWaysVerT,\r\n    pepIconArrowDown,\r\n    pepIconArrowUp,\r\n    pepIconArrowRightAlt,\r\n    pepIconArrowLeftAlt,\r\n    pepIconArrowDownAlt,\r\n    pepIconArrowUpAlt,\r\n    pepIconNumberNumber,\r\n    pepIconNumberPlus,\r\n    pepIconSystemBin,\r\n    pepIconSystemEdit,\r\n    pepIconSystemClose,\r\n    pepIconSystemFilter,\r\n    pepIconSystemMenu,\r\n    pepIconSystemHome,\r\n    pepIconSystemSettings,\r\n    pepIconSystemQuestion,\r\n    pepIconSystemAvatar,\r\n    pepIconSystemDoor,\r\n    pepIconSystemPrint,\r\n    pepIconSystemSearch,\r\n    pepIconSystemSpinner,\r\n    pepIconSystemInfo,\r\n    pepIconShoppingCart,\r\n    pepIconTimeCal,\r\n    pepIconViewCardLg,\r\n    pepIconViewCardMd,\r\n    pepIconViewCardSm,\r\n    pepIconViewTable,\r\n    pepIconViewMatrix,\r\n    pepIconViewLine,\r\n]"
            },
            {
                "name": "pepperiComponentsModules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-composite-lib-tester/src/app/common/ngx-helper.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    PepAttachmentModule,\r\n    PepCarouselModule,\r\n    PepBreadCrumbsModule,\r\n    PepButtonModule,\r\n    PepCheckboxModule,\r\n    PepColorModule,\r\n    PepDateModule,\r\n    PepGroupButtonsModule,\r\n    PepImageModule,\r\n    PepImagesFilmstripModule,\r\n    PepListModule,\r\n    PepCheckboxModule,\r\n    PepQuantitySelectorModule,\r\n    PepRichHtmlTextareaModule,\r\n    PepSearchModule,\r\n    PepSelectModule,\r\n    PepSeparatorModule,\r\n    PepSliderModule,\r\n    PepSideBarModule,\r\n    PepSignatureModule,\r\n    PepSizeDetectorModule,\r\n    PepTextareaModule,\r\n    PepTextboxModule,\r\n    PepIconModule,\r\n    PepMenuModule,\r\n    PepTopBarModule,\r\n    PepPageLayoutModule,\r\n    PepSmartFiltersModule,\r\n    PepFormModule\r\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-composite-lib/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-composite-lib-tester/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-composite-lib/generic-list/generic-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<GenericListComponent>",
                "defaultValue": "(args: GenericListComponent) => ({\r\n    props: {\r\n        fieldClick: action('fieldClick'),\r\n        valueChange: action('valueChange'),\r\n        breadCrumbItemClick: action('breadCrumbItemClick')\r\n    }\r\n    //props: args,\r\n    /*props: {\r\n        queryChange: action('queryChange'),\r\n        formValidationChange: action('formValidationChange'),\r\n    }, \r\n    template: `\r\n    <pep-generic-list>       \r\n    </pep-generic-list>   \r\n    `,*/\r\n})"
            }
        ],
        "functions": [
            {
                "name": "HttpLoaderFactory",
                "file": "projects/ngx-composite-lib/src/core/common/modules/ngx-helper-module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "fileStatus",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"uploading\" | \"downloading\" | \"done\" | \"failed\" | \"hidden\"",
                "file": "projects/ngx-composite-lib/file-status-panel/file-status-panel.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "PepGroupbuttonsTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sizes\" | \"font-weight\" | \"width-sizes\" | \"vertical-align\" | \"horizontal-align\" | \"custom\"",
                "file": "projects/ngx-composite-lib/group-buttons-settings/group-buttons-settings.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "PepShadowIntensityType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"soft\" | \"regular\" | \"hard\"",
                "file": "projects/ngx-composite-lib/shadow-settings/shadow-settings.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/ngx-composite-lib/generic-list/generic-list.stories.ts": [
                {
                    "name": "Base",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-composite-lib/generic-list/generic-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-composite-lib/generic-list/generic-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<GenericListComponent>",
                    "defaultValue": "(args: GenericListComponent) => ({\r\n    props: {\r\n        fieldClick: action('fieldClick'),\r\n        valueChange: action('valueChange'),\r\n        breadCrumbItemClick: action('breadCrumbItemClick')\r\n    }\r\n    //props: args,\r\n    /*props: {\r\n        queryChange: action('queryChange'),\r\n        formValidationChange: action('formValidationChange'),\r\n    }, \r\n    template: `\r\n    <pep-generic-list>       \r\n    </pep-generic-list>   \r\n    `,*/\r\n})"
                }
            ],
            "projects/ngx-composite-lib/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-composite-lib/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-composite-lib/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/ngx-composite-lib-tester/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-composite-lib-tester/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-composite-lib-tester/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/ngx-composite-lib-tester/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-composite-lib-tester/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    production: true\r\n}"
                }
            ],
            "projects/ngx-composite-lib-tester/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-composite-lib-tester/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    production: false\r\n}"
                }
            ],
            "projects/ngx-composite-lib-tester/src/app/generic-list-example/fake-data.ts": [
                {
                    "name": "FakeData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-composite-lib-tester/src/app/generic-list-example/fake-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    Addons: [\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '2e51566e-7035-42dd-a7c2-fb92bc4ed135',\r\n            Addon: {\r\n                UUID: 'e738c47c-ed34-49a9-9c02-f8fb5209d151',\r\n                Name: 'Add-ons Manager',\r\n                Description: 'Manage your add-ons',\r\n                SystemData:\r\n                    '{\"Versions\":[\"v1.0\"],\"EditorName\":\"addons_manager\",\"AngularPlugin\":true}',\r\n                Hidden: true,\r\n                Type: 1,\r\n                CreationDate: '2020-04-22T11:56:09.863Z',\r\n                ModificationDate: '2020-06-08T10:34:40.417Z',\r\n            },\r\n            Version: 'v1.0',\r\n            SystemData:\r\n                '{\"Version\":\"v1.0\",\"Editors\":[{\"ParentPackageName\":\"Configuration\",\"PackageName\":\"addons_manager\",\"Description\":\"Manage Addons\"}]}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/e738c47c-ed34-49a9-9c02-f8fb5209d151/v1.0/',\r\n            CreationDate: '2020-04-22T11:58:42.443Z',\r\n            ModificationDate: '2020-04-22T11:58:50.587Z',\r\n        },\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '31f078b4-e368-4f95-b512-15cb3d2d6fac',\r\n            Addon: {\r\n                UUID: 'bd629d5f-a7b4-4d03-9e7c-67865a6d82a9',\r\n                Name: 'Addons Manager',\r\n                Description: 'Manage the addons (install, uninstall, upgrade)',\r\n                SystemData:\r\n                    '{\"AngularPlugin\":true,\"EditorName\":\"addons_manager\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-08T09:39:08.703Z',\r\n                ModificationDate: '2020-08-05T13:19:45.87Z',\r\n            },\r\n            Version: '0.3.3',\r\n            SystemData: '{\"Version\":\"0.3.3\",\"AutomaticUpgrade\":\"true\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/bd629d5f-a7b4-4d03-9e7c-67865a6d82a9/0.3.3/',\r\n            CreationDate: '2020-06-21T13:19:14.54Z',\r\n            ModificationDate: '2020-08-03T08:19:09.013Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '14fb64d8-2b2c-4dec-8563-ac9fa98cd701',\r\n            Addon: {\r\n                UUID: 'fcb7ced2-4c81-4705-9f2b-89310d45e6c7',\r\n                Name: 'Automated Jobs',\r\n                Description: 'Run, Schedule and Audit your jobs',\r\n                SystemData: '{\"AngularPlugin\":true,\"EditorName\":\"scheduler\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-09T07:44:49.883Z',\r\n                ModificationDate: '2020-06-10T09:14:07.817Z',\r\n            },\r\n            Version: '1.0.53',\r\n            SystemData: '{\"Version\":\"1.0.53\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/fcb7ced2-4c81-4705-9f2b-89310d45e6c7/1.0.53/',\r\n            CreationDate: '2020-06-09T09:20:16.427Z',\r\n            ModificationDate: '2020-08-30T12:01:12.083Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: 'ba0adbdc-52e2-4049-816b-41d67b4a5bb7',\r\n            Addon: {\r\n                UUID: '1e66237b-b604-450e-92cf-81bcd171185a',\r\n                Name: 'CPI Node',\r\n                Description: 'Manages the embeded Node.js app in the CPI',\r\n                SystemData:\r\n                    '{ \"Versions\": [\"1.0.0\"], \"AngularPlugin\":true, \"EditorName\":\"editor\"  }',\r\n                Hidden: true,\r\n                Type: 2,\r\n                CreationDate: '2020-05-25T08:31:44.01Z',\r\n                ModificationDate: '2020-06-23T10:19:45.763Z',\r\n            },\r\n            Version: '0.0.3',\r\n            SystemData: '{\"Version\":\"0.0.3\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/1e66237b-b604-450e-92cf-81bcd171185a/0.0.3/',\r\n            CreationDate: '2020-06-17T14:16:31.71Z',\r\n            ModificationDate: '2020-08-27T11:17:12.67Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '1c24db9d-3c6f-4814-a92f-ac45a991df74',\r\n            Addon: {\r\n                UUID: '00000000-0000-0000-0000-000000abcdef',\r\n                Name: 'Cross Platforms API',\r\n                Description: 'Cross Platforms API (CPAPI)',\r\n                SystemData: '{}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-02T09:16:49.223Z',\r\n                ModificationDate: '2020-08-05T13:29:18.277Z',\r\n            },\r\n            Version: 'V106',\r\n            SystemData: '{\"Version\":\"V106\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/00000000-0000-0000-0000-000000abcdef/V106/',\r\n            CreationDate: '2020-06-17T20:04:02.857Z',\r\n            ModificationDate: '2020-08-05T08:48:45.45Z',\r\n        },\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '2251566e-7035-42dd-a7c2-fb92bc4ed135',\r\n            Addon: {\r\n                UUID: 'e738c47c-ed34-49a9-9c02-f8fb5209d151',\r\n                Name: 'Add-ons Manager',\r\n                Description: 'Manage your add-ons',\r\n                SystemData:\r\n                    '{\"Versions\":[\"v1.0\"],\"EditorName\":\"addons_manager\",\"AngularPlugin\":true}',\r\n                Hidden: true,\r\n                Type: 1,\r\n                CreationDate: '2020-04-22T11:56:09.863Z',\r\n                ModificationDate: '2020-06-08T10:34:40.417Z',\r\n            },\r\n            Version: 'v1.0',\r\n            SystemData:\r\n                '{\"Version\":\"v1.0\",\"Editors\":[{\"ParentPackageName\":\"Configuration\",\"PackageName\":\"addons_manager\",\"Description\":\"Manage Addons\"}]}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/e738c47c-ed34-49a9-9c02-f8fb5209d151/v1.0/',\r\n            CreationDate: '2020-04-22T11:58:42.443Z',\r\n            ModificationDate: '2020-04-22T11:58:50.587Z',\r\n        },\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '33f078b4-e368-4f95-b512-15cb3d2d6fac',\r\n            Addon: {\r\n                UUID: 'bd629d5f-a7b4-4d03-9e7c-67865a6d82a9',\r\n                Name: 'Addons Manager',\r\n                Description: 'Manage the addons (install, uninstall, upgrade)',\r\n                SystemData:\r\n                    '{\"AngularPlugin\":true,\"EditorName\":\"addons_manager\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-08T09:39:08.703Z',\r\n                ModificationDate: '2020-08-05T13:19:45.87Z',\r\n            },\r\n            Version: '0.3.3',\r\n            SystemData: '{\"Version\":\"0.3.3\",\"AutomaticUpgrade\":\"true\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/bd629d5f-a7b4-4d03-9e7c-67865a6d82a9/0.3.3/',\r\n            CreationDate: '2020-06-21T13:19:14.54Z',\r\n            ModificationDate: '2020-08-03T08:19:09.013Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '44fb64d8-2b2c-4dec-8563-ac9fa98cd701',\r\n            Addon: {\r\n                UUID: 'fcb7ced2-4c81-4705-9f2b-89310d45e6c7',\r\n                Name: 'Automated Jobs',\r\n                Description: 'Run, Schedule and Audit your jobs',\r\n                SystemData: '{\"AngularPlugin\":true,\"EditorName\":\"scheduler\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-09T07:44:49.883Z',\r\n                ModificationDate: '2020-06-10T09:14:07.817Z',\r\n            },\r\n            Version: '1.0.53',\r\n            SystemData: '{\"Version\":\"1.0.53\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/fcb7ced2-4c81-4705-9f2b-89310d45e6c7/1.0.53/',\r\n            CreationDate: '2020-06-09T09:20:16.427Z',\r\n            ModificationDate: '2020-08-30T12:01:12.083Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '50adbdc-52e2-4049-816b-41d67b4a5bb7',\r\n            Addon: {\r\n                UUID: '1e66237b-b604-450e-92cf-81bcd171185a',\r\n                Name: 'CPI Node',\r\n                Description: 'Manages the embeded Node.js app in the CPI',\r\n                SystemData:\r\n                    '{ \"Versions\": [\"1.0.0\"], \"AngularPlugin\":true, \"EditorName\":\"editor\"  }',\r\n                Hidden: true,\r\n                Type: 2,\r\n                CreationDate: '2020-05-25T08:31:44.01Z',\r\n                ModificationDate: '2020-06-23T10:19:45.763Z',\r\n            },\r\n            Version: '0.0.3',\r\n            SystemData: '{\"Version\":\"0.0.3\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/1e66237b-b604-450e-92cf-81bcd171185a/0.0.3/',\r\n            CreationDate: '2020-06-17T14:16:31.71Z',\r\n            ModificationDate: '2020-08-27T11:17:12.67Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '6c24db9d-3c6f-4814-a92f-ac45a991df74',\r\n            Addon: {\r\n                UUID: '00000000-0000-0000-0000-000000abcdef',\r\n                Name: 'Cross Platforms API',\r\n                Description: 'Cross Platforms API (CPAPI)',\r\n                SystemData: '{}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-02T09:16:49.223Z',\r\n                ModificationDate: '2020-08-05T13:29:18.277Z',\r\n            },\r\n            Version: 'V106',\r\n            SystemData: '{\"Version\":\"V106\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/00000000-0000-0000-0000-000000abcdef/V106/',\r\n            CreationDate: '2020-06-17T20:04:02.857Z',\r\n            ModificationDate: '2020-08-05T08:48:45.45Z',\r\n        },\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '7e51566e-7035-42dd-a7c2-fb92bc4ed135',\r\n            Addon: {\r\n                UUID: 'e738c47c-ed34-49a9-9c02-f8fb5209d151',\r\n                Name: 'Add-ons Manager',\r\n                Description: 'Manage your add-ons',\r\n                SystemData:\r\n                    '{\"Versions\":[\"v1.0\"],\"EditorName\":\"addons_manager\",\"AngularPlugin\":true}',\r\n                Hidden: true,\r\n                Type: 1,\r\n                CreationDate: '2020-04-22T11:56:09.863Z',\r\n                ModificationDate: '2020-06-08T10:34:40.417Z',\r\n            },\r\n            Version: 'v1.0',\r\n            SystemData:\r\n                '{\"Version\":\"v1.0\",\"Editors\":[{\"ParentPackageName\":\"Configuration\",\"PackageName\":\"addons_manager\",\"Description\":\"Manage Addons\"}]}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/e738c47c-ed34-49a9-9c02-f8fb5209d151/v1.0/',\r\n            CreationDate: '2020-04-22T11:58:42.443Z',\r\n            ModificationDate: '2020-04-22T11:58:50.587Z',\r\n        },\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '81f078b4-e368-4f95-b512-15cb3d2d6fac',\r\n            Addon: {\r\n                UUID: 'bd629d5f-a7b4-4d03-9e7c-67865a6d82a9',\r\n                Name: 'Addons Manager',\r\n                Description: 'Manage the addons (install, uninstall, upgrade)',\r\n                SystemData:\r\n                    '{\"AngularPlugin\":true,\"EditorName\":\"addons_manager\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-08T09:39:08.703Z',\r\n                ModificationDate: '2020-08-05T13:19:45.87Z',\r\n            },\r\n            Version: '0.3.3',\r\n            SystemData: '{\"Version\":\"0.3.3\",\"AutomaticUpgrade\":\"true\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/bd629d5f-a7b4-4d03-9e7c-67865a6d82a9/0.3.3/',\r\n            CreationDate: '2020-06-21T13:19:14.54Z',\r\n            ModificationDate: '2020-08-03T08:19:09.013Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '94fb64d8-2b2c-4dec-8563-ac9fa98cd701',\r\n            Addon: {\r\n                UUID: 'fcb7ced2-4c81-4705-9f2b-89310d45e6c7',\r\n                Name: 'Automated Jobs',\r\n                Description: 'Run, Schedule and Audit your jobs',\r\n                SystemData: '{\"AngularPlugin\":true,\"EditorName\":\"scheduler\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-09T07:44:49.883Z',\r\n                ModificationDate: '2020-06-10T09:14:07.817Z',\r\n            },\r\n            Version: '1.0.53',\r\n            SystemData: '{\"Version\":\"1.0.53\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/fcb7ced2-4c81-4705-9f2b-89310d45e6c7/1.0.53/',\r\n            CreationDate: '2020-06-09T09:20:16.427Z',\r\n            ModificationDate: '2020-08-30T12:01:12.083Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '100adbdc-52e2-4049-816b-41d67b4a5bb7',\r\n            Addon: {\r\n                UUID: '1e66237b-b604-450e-92cf-81bcd171185a',\r\n                Name: 'CPI Node',\r\n                Description: 'Manages the embeded Node.js app in the CPI',\r\n                SystemData:\r\n                    '{ \"Versions\": [\"1.0.0\"], \"AngularPlugin\":true, \"EditorName\":\"editor\"  }',\r\n                Hidden: true,\r\n                Type: 2,\r\n                CreationDate: '2020-05-25T08:31:44.01Z',\r\n                ModificationDate: '2020-06-23T10:19:45.763Z',\r\n            },\r\n            Version: '0.0.3',\r\n            SystemData: '{\"Version\":\"0.0.3\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/1e66237b-b604-450e-92cf-81bcd171185a/0.0.3/',\r\n            CreationDate: '2020-06-17T14:16:31.71Z',\r\n            ModificationDate: '2020-08-27T11:17:12.67Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '1124db9d-3c6f-4814-a92f-ac45a991df74',\r\n            Addon: {\r\n                UUID: '00000000-0000-0000-0000-000000abcdef',\r\n                Name: 'Cross Platforms API',\r\n                Description: 'Cross Platforms API (CPAPI)',\r\n                SystemData: '{}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-02T09:16:49.223Z',\r\n                ModificationDate: '2020-08-05T13:29:18.277Z',\r\n            },\r\n            Version: 'V106',\r\n            SystemData: '{\"Version\":\"V106\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/00000000-0000-0000-0000-000000abcdef/V106/',\r\n            CreationDate: '2020-06-17T20:04:02.857Z',\r\n            ModificationDate: '2020-08-05T08:48:45.45Z',\r\n        },\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '1251566e-7035-42dd-a7c2-fb92bc4ed135',\r\n            Addon: {\r\n                UUID: 'e738c47c-ed34-49a9-9c02-f8fb5209d151',\r\n                Name: 'Add-ons Manager',\r\n                Description: 'Manage your add-ons',\r\n                SystemData:\r\n                    '{\"Versions\":[\"v1.0\"],\"EditorName\":\"addons_manager\",\"AngularPlugin\":true}',\r\n                Hidden: true,\r\n                Type: 1,\r\n                CreationDate: '2020-04-22T11:56:09.863Z',\r\n                ModificationDate: '2020-06-08T10:34:40.417Z',\r\n            },\r\n            Version: 'v1.0',\r\n            SystemData:\r\n                '{\"Version\":\"v1.0\",\"Editors\":[{\"ParentPackageName\":\"Configuration\",\"PackageName\":\"addons_manager\",\"Description\":\"Manage Addons\"}]}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/e738c47c-ed34-49a9-9c02-f8fb5209d151/v1.0/',\r\n            CreationDate: '2020-04-22T11:58:42.443Z',\r\n            ModificationDate: '2020-04-22T11:58:50.587Z',\r\n        },\r\n        {\r\n            Type: 'OverwriteExisting',\r\n            UUID: '13f078b4-e368-4f95-b512-15cb3d2d6fac',\r\n            Addon: {\r\n                UUID: 'bd629d5f-a7b4-4d03-9e7c-67865a6d82a9',\r\n                Name: 'Addons Manager',\r\n                Description: 'Manage the addons (install, uninstall, upgrade)',\r\n                SystemData:\r\n                    '{\"AngularPlugin\":true,\"EditorName\":\"addons_manager\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-08T09:39:08.703Z',\r\n                ModificationDate: '2020-08-05T13:19:45.87Z',\r\n            },\r\n            Version: '0.3.3',\r\n            SystemData: '{\"Version\":\"0.3.3\",\"AutomaticUpgrade\":\"true\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/bd629d5f-a7b4-4d03-9e7c-67865a6d82a9/0.3.3/',\r\n            CreationDate: '2020-06-21T13:19:14.54Z',\r\n            ModificationDate: '2020-08-03T08:19:09.013Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '14fb64d8-2b2c-4dec-8563-ac9fa98cd731',\r\n            Addon: {\r\n                UUID: 'fcb7ced2-4c81-4705-9f2b-89310d45e6c7',\r\n                Name: 'Automated Jobs',\r\n                Description: 'Run, Schedule and Audit your jobs',\r\n                SystemData: '{\"AngularPlugin\":true,\"EditorName\":\"scheduler\"}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-09T07:44:49.883Z',\r\n                ModificationDate: '2020-06-10T09:14:07.817Z',\r\n            },\r\n            Version: '1.0.53',\r\n            SystemData: '{\"Version\":\"1.0.53\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/fcb7ced2-4c81-4705-9f2b-89310d45e6c7/1.0.53/',\r\n            CreationDate: '2020-06-09T09:20:16.427Z',\r\n            ModificationDate: '2020-08-30T12:01:12.083Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '150adbdc-52e2-4049-816b-41d67b4a5bb7',\r\n            Addon: {\r\n                UUID: '1e66237b-b604-450e-92cf-81bcd171185a',\r\n                Name: 'CPI Node',\r\n                Description: 'Manages the embeded Node.js app in the CPI',\r\n                SystemData:\r\n                    '{ \"Versions\": [\"1.0.0\"], \"AngularPlugin\":true, \"EditorName\":\"editor\"  }',\r\n                Hidden: true,\r\n                Type: 2,\r\n                CreationDate: '2020-05-25T08:31:44.01Z',\r\n                ModificationDate: '2020-06-23T10:19:45.763Z',\r\n            },\r\n            Version: '0.0.3',\r\n            SystemData: '{\"Version\":\"0.0.3\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/1e66237b-b604-450e-92cf-81bcd171185a/0.0.3/',\r\n            CreationDate: '2020-06-17T14:16:31.71Z',\r\n            ModificationDate: '2020-08-27T11:17:12.67Z',\r\n        },\r\n        {\r\n            Type: 'UseExisting',\r\n            UUID: '1624db9d-3c6f-4814-a92f-ac45a991df74',\r\n            Addon: {\r\n                UUID: '00000000-0000-0000-0000-000000abcdef',\r\n                Name: 'Cross Platforms API',\r\n                Description: 'Cross Platforms API (CPAPI)',\r\n                SystemData: '{}',\r\n                Hidden: false,\r\n                Type: 1,\r\n                CreationDate: '2020-06-02T09:16:49.223Z',\r\n                ModificationDate: '2020-08-05T13:29:18.277Z',\r\n            },\r\n            Version: 'V106',\r\n            SystemData: '{\"Version\":\"V106\"}',\r\n            AdditionalData: '{}',\r\n            Hidden: false,\r\n            PublicBaseURL:\r\n                'https://cdn.staging.pepperi.com/Addon/Public/00000000-0000-0000-0000-000000abcdef/V106/',\r\n            CreationDate: '2020-06-17T20:04:02.857Z',\r\n            ModificationDate: '2020-08-05T08:48:45.45Z',\r\n        }\r\n    ],\r\n}"
                }
            ],
            "stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/ngx-composite-lib/group-buttons-settings/group-buttons-settings.module.ts": [
                {
                    "name": "pepIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-composite-lib/group-buttons-settings/group-buttons-settings.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    pepIconTextAlignCenter, \r\n    pepIconTextAlignLeft, \r\n    pepIconTextAlignRight\r\n]"
                }
            ],
            "projects/ngx-composite-lib-tester/src/app/common/ngx-helper.module.ts": [
                {
                    "name": "pepIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-composite-lib-tester/src/app/common/ngx-helper.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    pepIconSystemBolt,\r\n    pepIconNoImage,\r\n    pepIconNoImage2,\r\n    pepIconArrowTwoWaysVerT,\r\n    pepIconArrowDown,\r\n    pepIconArrowUp,\r\n    pepIconArrowRightAlt,\r\n    pepIconArrowLeftAlt,\r\n    pepIconArrowDownAlt,\r\n    pepIconArrowUpAlt,\r\n    pepIconNumberNumber,\r\n    pepIconNumberPlus,\r\n    pepIconSystemBin,\r\n    pepIconSystemEdit,\r\n    pepIconSystemClose,\r\n    pepIconSystemFilter,\r\n    pepIconSystemMenu,\r\n    pepIconSystemHome,\r\n    pepIconSystemSettings,\r\n    pepIconSystemQuestion,\r\n    pepIconSystemAvatar,\r\n    pepIconSystemDoor,\r\n    pepIconSystemPrint,\r\n    pepIconSystemSearch,\r\n    pepIconSystemSpinner,\r\n    pepIconSystemInfo,\r\n    pepIconShoppingCart,\r\n    pepIconTimeCal,\r\n    pepIconViewCardLg,\r\n    pepIconViewCardMd,\r\n    pepIconViewCardSm,\r\n    pepIconViewTable,\r\n    pepIconViewMatrix,\r\n    pepIconViewLine,\r\n]"
                },
                {
                    "name": "pepperiComponentsModules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-composite-lib-tester/src/app/common/ngx-helper.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    PepAttachmentModule,\r\n    PepCarouselModule,\r\n    PepBreadCrumbsModule,\r\n    PepButtonModule,\r\n    PepCheckboxModule,\r\n    PepColorModule,\r\n    PepDateModule,\r\n    PepGroupButtonsModule,\r\n    PepImageModule,\r\n    PepImagesFilmstripModule,\r\n    PepListModule,\r\n    PepCheckboxModule,\r\n    PepQuantitySelectorModule,\r\n    PepRichHtmlTextareaModule,\r\n    PepSearchModule,\r\n    PepSelectModule,\r\n    PepSeparatorModule,\r\n    PepSliderModule,\r\n    PepSideBarModule,\r\n    PepSignatureModule,\r\n    PepSizeDetectorModule,\r\n    PepTextareaModule,\r\n    PepTextboxModule,\r\n    PepIconModule,\r\n    PepMenuModule,\r\n    PepTopBarModule,\r\n    PepPageLayoutModule,\r\n    PepSmartFiltersModule,\r\n    PepFormModule\r\n]"
                }
            ]
        },
        "groupedFunctions": {
            "projects/ngx-composite-lib/src/core/common/modules/ngx-helper-module.ts": [
                {
                    "name": "HttpLoaderFactory",
                    "file": "projects/ngx-composite-lib/src/core/common/modules/ngx-helper-module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "httpClient",
                            "type": "HttpClient",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "httpClient",
                            "type": "HttpClient",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/ngx-composite-lib/file-status-panel/file-status-panel.model.ts": [
                {
                    "name": "fileStatus",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"uploading\" | \"downloading\" | \"done\" | \"failed\" | \"hidden\"",
                    "file": "projects/ngx-composite-lib/file-status-panel/file-status-panel.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/ngx-composite-lib/group-buttons-settings/group-buttons-settings.model.ts": [
                {
                    "name": "PepGroupbuttonsTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sizes\" | \"font-weight\" | \"width-sizes\" | \"vertical-align\" | \"horizontal-align\" | \"custom\"",
                    "file": "projects/ngx-composite-lib/group-buttons-settings/group-buttons-settings.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/ngx-composite-lib/shadow-settings/shadow-settings.model.ts": [
                {
                    "name": "PepShadowIntensityType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"soft\" | \"regular\" | \"hard\"",
                    "file": "projects/ngx-composite-lib/shadow-settings/shadow-settings.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "projects/ngx-composite-lib-tester/src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ngx-composite-lib-tester/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib-tester/src/app/common/ngx-helper.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pepIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib-tester/src/app/common/ngx-helper.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pepperiComponentsModules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib-tester/src/app/components-example/components-example.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComponentsExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib-tester/src/app/generic-list-example/fake-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FakeData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib-tester/src/app/generic-list-example/generic-list-example.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GenericListExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib-tester/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib-tester/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib-tester/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib-tester/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/color-settings/color-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/color-settings/color-settings.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PepColorSettings",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/draggable-item/draggable-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DraggableItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/file-status-panel/file-status-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FileStatusPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/file-status-panel/file-status-panel.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IFile",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/generic-list/generic-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GenericListComponent",
                "coveragePercent": 4,
                "coverageCount": "2/41",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/generic-list/generic-list.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPepGenericListActions",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/generic-list/generic-list.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPepGenericListDataSource",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/generic-list/generic-list.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPepGenericListPager",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/generic-list/generic-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Base",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/generic-list/generic-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/group-buttons-settings/group-buttons-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GroupButtonsSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/group-buttons-settings/group-buttons-settings.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pepIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/shadow-settings/shadow-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShadowSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/shadow-settings/shadow-settings.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PepShadowSettings",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/src/core/common/modules/ngx-helper-module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "HttpLoaderFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/src/core/common/services/utilities.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PepCompositeLibUtilitiesService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-composite-lib/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}